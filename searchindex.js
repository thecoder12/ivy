Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/greater_equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/greater_equal","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/greater_equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/greater_equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/greater_equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/greater_equal","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/greater_equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/greater_equal.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/greater_equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/greater_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/greater_equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/greater_equal.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[851,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[395,0,0,"-"],creation_functions:[396,0,0,"-"],data_type_functions:[400,0,0,"-"],data_types:[404,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[397,2,1,""],tril:[398,2,1,""],zeros:[399,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[400,1,1,""],finfo:[402,2,1,""],iinfo:[403,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[400,3,1,""],bits:[400,3,1,""],eps:[400,3,1,""],max:[400,3,1,""],min:[400,3,1,""],smallest_normal:[400,3,1,""]},"ivy.functional.backends.numpy.core":{device:[447,0,0,"-"],general:[449,0,0,"-"],gradients:[482,0,0,"-"],image:[487,0,0,"-"],linear_algebra:[491,0,0,"-"],logic:[495,0,0,"-"],math:[496,0,0,"-"],random:[498,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[448,1,1,""],clear_mem_on_dev:[447,2,1,""],dev:[447,2,1,""],dev_from_str:[447,2,1,""],dev_to_str:[447,2,1,""],gpu_is_available:[447,2,1,""],num_gpus:[447,2,1,""],to_dev:[447,2,1,""],tpu_is_available:[447,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[448,3,1,""],start:[448,3,1,""],stop:[448,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[449,2,1,""],arange:[450,2,1,""],argmin:[451,2,1,""],array:[452,2,1,""],asarray:[449,2,1,""],astype:[449,2,1,""],cast:[453,2,1,""],clip:[449,2,1,""],compile:[454,2,1,""],concatenate:[455,2,1,""],constant_pad:[449,2,1,""],container_types:[449,2,1,""],copy_array:[449,2,1,""],cumprod:[456,2,1,""],current_framework_str:[449,2,1,""],dtype:[457,2,1,""],dtype_bits:[458,2,1,""],dtype_from_str:[459,2,1,""],dtype_to_str:[460,2,1,""],floor:[449,2,1,""],floormod:[449,2,1,""],full:[461,2,1,""],gather:[462,2,1,""],gather_nd:[463,2,1,""],get_num_dims:[449,2,1,""],identity:[464,2,1,""],indices_where:[465,2,1,""],inplace_arrays_supported:[449,2,1,""],inplace_decrement:[466,2,1,""],inplace_increment:[467,2,1,""],inplace_update:[468,2,1,""],inplace_variables_supported:[449,2,1,""],is_array:[469,2,1,""],linear_resample:[470,2,1,""],linspace:[471,2,1,""],logspace:[472,2,1,""],matmul:[449,2,1,""],meshgrid:[449,2,1,""],multiprocessing:[449,2,1,""],one_hot:[473,2,1,""],ones_like:[474,2,1,""],round:[449,2,1,""],scatter_flat:[475,2,1,""],scatter_nd:[476,2,1,""],shape:[449,2,1,""],split:[477,2,1,""],squeeze:[478,2,1,""],to_list:[449,2,1,""],to_numpy:[449,2,1,""],to_scalar:[449,2,1,""],transpose:[479,2,1,""],unstack:[480,2,1,""],where:[449,2,1,""],zero_pad:[449,2,1,""],zeros_like:[481,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[483,2,1,""],is_variable:[484,2,1,""],stop_gradient:[485,2,1,""],variable:[486,2,1,""],variable_data:[482,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[488,2,1,""],gradient_image:[489,2,1,""],stack_images:[490,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[492,2,1,""],qr:[493,2,1,""],vector_to_skew_symmetric_matrix:[494,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[497,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[499,2,1,""],randint:[498,2,1,""],random_normal:[498,2,1,""],random_uniform:[498,2,1,""],seed:[498,2,1,""],shuffle:[498,2,1,""]},"ivy.functional.ivy":{array_api:[852,0,0,"-"],core:[892,0,0,"-"],nn:[1230,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[853,0,0,"-"],creation_functions:[854,0,0,"-"],data_type_functions:[858,0,0,"-"],data_types:[861,0,0,"-"],elementwise_functions:[862,0,0,"-"],function_and_method_signatures:[876,0,0,"-"],linear_algebra:[877,0,0,"-"],manipulation_functions:[881,0,0,"-"],searching_functions:[883,0,0,"-"],set_functions:[885,0,0,"-"],sorting_functions:[886,0,0,"-"],statistical_functions:[888,0,0,"-"],utility_functions:[889,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[853,4,1,""],nan:[853,4,1,""],pi:[853,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[855,2,1,""],tril:[856,2,1,""],zeros:[857,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[859,2,1,""],iinfo:[860,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[863,2,1,""],bitwise_and:[864,2,1,""],ceil:[865,2,1,""],cos:[866,2,1,""],cosh:[867,2,1,""],isfinite:[868,2,1,""],isnan:[869,2,1,""],less:[870,2,1,""],less_equal:[871,2,1,""],log1p:[872,2,1,""],log2:[873,2,1,""],logical_not:[874,2,1,""],sqrt:[875,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[878,2,1,""],svd:[879,2,1,""],vector_norm:[880,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[882,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[884,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[887,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[890,2,1,""],any:[891,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[893,0,0,"-"],compilation:[932,0,0,"-"],device:[934,0,0,"-"],dtype:[984,0,0,"-"],general:[1008,0,0,"-"],gradients:[1105,0,0,"-"],image:[1121,0,0,"-"],linalg:[1128,0,0,"-"],logic:[1135,0,0,"-"],math:[1138,0,0,"-"],meta:[1154,0,0,"-"],multi_node:[1158,0,0,"-"],nest:[1202,0,0,"-"],random:[1214,0,0,"-"],reductions:[1221,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[894,2,1,""],builtin_add:[895,2,1,""],builtin_and:[896,2,1,""],builtin_bool:[897,2,1,""],builtin_contains:[898,2,1,""],builtin_deepcopy:[899,2,1,""],builtin_dir:[900,2,1,""],builtin_eq:[901,2,1,""],builtin_float:[902,2,1,""],builtin_floordiv:[903,2,1,""],builtin_ge:[904,2,1,""],builtin_getattr:[905,2,1,""],builtin_getattribute:[906,2,1,""],builtin_getitem:[907,2,1,""],builtin_gt:[908,2,1,""],builtin_int:[909,2,1,""],builtin_invert:[910,2,1,""],builtin_le:[911,2,1,""],builtin_lt:[912,2,1,""],builtin_mul:[913,2,1,""],builtin_ne:[914,2,1,""],builtin_neg:[915,2,1,""],builtin_or:[916,2,1,""],builtin_pos:[917,2,1,""],builtin_pow:[918,2,1,""],builtin_radd:[919,2,1,""],builtin_rand:[920,2,1,""],builtin_rfloordiv:[921,2,1,""],builtin_rmul:[922,2,1,""],builtin_ror:[923,2,1,""],builtin_rpow:[924,2,1,""],builtin_rsub:[925,2,1,""],builtin_rtruediv:[926,2,1,""],builtin_rxor:[927,2,1,""],builtin_setitem:[928,2,1,""],builtin_sub:[929,2,1,""],builtin_truediv:[930,2,1,""],builtin_xor:[931,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[933,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[934,1,1,""],DevClonedItem:[936,1,1,""],DevClonedIter:[937,1,1,""],DevClonedNest:[938,1,1,""],DevDistItem:[939,1,1,""],DevDistIter:[940,1,1,""],DevDistNest:[941,1,1,""],DevManager:[934,1,1,""],DevMapper:[943,1,1,""],DevMapperMultiProc:[944,1,1,""],MultiDev:[934,1,1,""],MultiDevItem:[946,1,1,""],MultiDevIter:[947,1,1,""],MultiDevNest:[948,1,1,""],Profiler:[949,1,1,""],clear_mem_on_dev:[950,2,1,""],default_device:[951,2,1,""],dev:[952,2,1,""],dev_clone:[953,2,1,""],dev_clone_array:[954,2,1,""],dev_clone_iter:[955,2,1,""],dev_clone_nest:[956,2,1,""],dev_dist:[957,2,1,""],dev_dist_array:[958,2,1,""],dev_dist_iter:[959,2,1,""],dev_dist_nest:[960,2,1,""],dev_from_str:[961,2,1,""],dev_to_str:[962,2,1,""],dev_unify:[963,2,1,""],dev_unify_array:[964,2,1,""],dev_unify_iter:[965,2,1,""],dev_unify_nest:[966,2,1,""],dev_util:[967,2,1,""],get_all_arrays_on_dev:[968,2,1,""],gpu_is_available:[969,2,1,""],num_arrays_on_dev:[970,2,1,""],num_cpu_cores:[971,2,1,""],num_gpus:[972,2,1,""],percent_used_mem_on_dev:[973,2,1,""],print_all_arrays_on_dev:[974,2,1,""],set_default_device:[975,2,1,""],set_split_factor:[976,2,1,""],split_factor:[977,2,1,""],split_func_call:[978,2,1,""],to_dev:[979,2,1,""],total_mem_on_dev:[980,2,1,""],tpu_is_available:[981,2,1,""],unset_default_device:[982,2,1,""],used_mem_on_dev:[983,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[934,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[934,3,1,""],da_tune_step:[934,3,1,""],dim_size:[934,3,1,""],ds_tune_step:[934,3,1,""],map:[934,3,1,""],repeated_config_check:[934,3,1,""],tune_step:[934,3,1,""],tuned:[934,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[943,3,1,""],map:[943,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[944,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[934,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[946,3,1,""],items:[946,3,1,""],keys:[946,3,1,""],shape:[946,3,1,""],values:[946,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[947,3,1,""],at_dev:[947,3,1,""],at_devs:[947,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[948,3,1,""],at_dev:[948,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[949,3,1,""],start:[949,3,1,""],stop:[949,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[984,1,1,""],DefaultFloatDtype:[984,1,1,""],DefaultIntDtype:[984,1,1,""],astype:[984,2,1,""],cast:[988,2,1,""],closest_valid_dtype:[989,2,1,""],convert_dtype:[990,2,1,""],default_dtype:[991,2,1,""],default_float_dtype:[992,2,1,""],default_int_dtype:[993,2,1,""],dtype:[994,2,1,""],dtype_bits:[995,2,1,""],dtype_from_str:[996,2,1,""],dtype_to_str:[997,2,1,""],invalid_dtype:[998,2,1,""],is_float_dtype:[999,2,1,""],is_int_dtype:[1000,2,1,""],set_default_dtype:[1001,2,1,""],set_default_float_dtype:[1002,2,1,""],set_default_int_dtype:[1003,2,1,""],unset_default_dtype:[1004,2,1,""],unset_default_float_dtype:[1005,2,1,""],unset_default_int_dtype:[1006,2,1,""],valid_dtype:[1007,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[984,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[984,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[984,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1031,2,1,""],abs:[1009,2,1,""],all_equal:[1010,2,1,""],arange:[1011,2,1,""],arg_names:[1012,2,1,""],argmin:[1013,2,1,""],array:[1014,2,1,""],array_equal:[1015,2,1,""],arrays_equal:[1016,2,1,""],asarray:[1008,2,1,""],assert_supports_inplace:[1017,2,1,""],broadcast_to:[1018,2,1,""],cache_fn:[1019,2,1,""],clip:[1020,2,1,""],clip_matrix_norm:[1021,2,1,""],clip_vector_norm:[1022,2,1,""],concatenate:[1023,2,1,""],constant_pad:[1024,2,1,""],container_types:[1025,2,1,""],copy_array:[1026,2,1,""],cross:[1027,2,1,""],cumprod:[1028,2,1,""],cumsum:[1029,2,1,""],current_framework_str:[1030,2,1,""],einops_rearrange:[1032,2,1,""],einops_reduce:[1033,2,1,""],einops_repeat:[1034,2,1,""],equal:[1035,2,1,""],exists:[1036,2,1,""],expand_dims:[1037,2,1,""],floor:[1038,2,1,""],floormod:[1039,2,1,""],fourier_encode:[1040,2,1,""],full:[1041,2,1,""],gather:[1042,2,1,""],gather_nd:[1043,2,1,""],get_all_arrays_in_memory:[1044,2,1,""],get_min_base:[1045,2,1,""],get_min_denominator:[1046,2,1,""],get_num_dims:[1047,2,1,""],get_referrers_recursive:[1048,2,1,""],greater_equal:[1049,2,1,""],has_nans:[1050,2,1,""],identity:[1051,2,1,""],indices_where:[1052,2,1,""],inplace_arrays_supported:[1053,2,1,""],inplace_decrement:[1054,2,1,""],inplace_increment:[1055,2,1,""],inplace_update:[1056,2,1,""],inplace_variables_supported:[1057,2,1,""],is_array:[1058,2,1,""],isinf:[1059,2,1,""],linear_resample:[1060,2,1,""],linspace:[1061,2,1,""],logspace:[1062,2,1,""],match_kwargs:[1063,2,1,""],matmul:[1064,2,1,""],maximum:[1065,2,1,""],meshgrid:[1066,2,1,""],minimum:[1067,2,1,""],multiprocessing:[1068,2,1,""],num_arrays_in_memory:[1069,2,1,""],one_hot:[1070,2,1,""],ones:[1071,2,1,""],ones_like:[1072,2,1,""],print_all_arrays_in_memory:[1073,2,1,""],queue_timeout:[1074,2,1,""],repeat:[1075,2,1,""],reshape:[1076,2,1,""],round:[1077,2,1,""],scatter_flat:[1078,2,1,""],scatter_nd:[1079,2,1,""],set_min_base:[1080,2,1,""],set_min_denominator:[1081,2,1,""],set_queue_timeout:[1082,2,1,""],set_tmp_dir:[1083,2,1,""],shape:[1084,2,1,""],shape_to_tuple:[1085,2,1,""],split:[1086,2,1,""],squeeze:[1087,2,1,""],stable_divide:[1088,2,1,""],stable_pow:[1089,2,1,""],stack:[1090,2,1,""],supports_inplace:[1091,2,1,""],swapaxes:[1092,2,1,""],tile:[1093,2,1,""],tmp_dir:[1094,2,1,""],to_list:[1095,2,1,""],to_numpy:[1096,2,1,""],to_scalar:[1097,2,1,""],transpose:[1098,2,1,""],try_else_none:[1099,2,1,""],unstack:[1100,2,1,""],value_is_nan:[1101,2,1,""],where:[1102,2,1,""],zero_pad:[1103,2,1,""],zeros_like:[1104,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1105,1,1,""],adam_step:[1107,2,1,""],adam_update:[1108,2,1,""],execute_with_gradients:[1109,2,1,""],gradient_descent_update:[1110,2,1,""],is_variable:[1111,2,1,""],lamb_update:[1112,2,1,""],lars_update:[1113,2,1,""],optimizer_update:[1114,2,1,""],set_with_grads:[1115,2,1,""],stop_gradient:[1116,2,1,""],unset_with_grads:[1117,2,1,""],variable:[1118,2,1,""],variable_data:[1119,2,1,""],with_grads:[1120,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1105,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1122,2,1,""],float_img_to_uint8_img:[1123,2,1,""],gradient_image:[1124,2,1,""],random_crop:[1125,2,1,""],stack_images:[1126,2,1,""],uint8_img_to_float_img:[1127,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1129,2,1,""],inv:[1130,2,1,""],matrix_norm:[1131,2,1,""],pinv:[1132,2,1,""],qr:[1133,2,1,""],vector_to_skew_symmetric_matrix:[1134,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1136,2,1,""],logical_or:[1137,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1139,2,1,""],acosh:[1140,2,1,""],asin:[1141,2,1,""],atan2:[1143,2,1,""],atan:[1142,2,1,""],atanh:[1144,2,1,""],cosh:[1145,2,1,""],divide:[1146,2,1,""],erf:[1147,2,1,""],exp:[1148,2,1,""],log:[1149,2,1,""],sin:[1150,2,1,""],sinh:[1151,2,1,""],tan:[1152,2,1,""],tanh:[1153,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1155,2,1,""],maml_step:[1156,2,1,""],reptile_step:[1157,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1158,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1203,2,1,""],copy_nest:[1204,2,1,""],index_nest:[1205,2,1,""],map:[1206,2,1,""],map_nest_at_index:[1207,2,1,""],map_nest_at_indices:[1208,2,1,""],multi_index_nest:[1209,2,1,""],nested_indices_where:[1210,2,1,""],nested_map:[1211,2,1,""],set_nest_at_index:[1212,2,1,""],set_nest_at_indices:[1213,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1215,2,1,""],randint:[1216,2,1,""],random_normal:[1217,2,1,""],random_uniform:[1218,2,1,""],seed:[1219,2,1,""],shuffle:[1220,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1222,2,1,""],reduce_max:[1223,2,1,""],reduce_mean:[1224,2,1,""],reduce_min:[1225,2,1,""],reduce_prod:[1226,2,1,""],reduce_std:[1227,2,1,""],reduce_sum:[1228,2,1,""],reduce_var:[1229,2,1,""]},"ivy.functional.ivy.nn":{activations:[1231,0,0,"-"],layers:[1239,0,0,"-"],losses:[1252,0,0,"-"],norms:[1256,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1232,2,1,""],leaky_relu:[1233,2,1,""],relu:[1234,2,1,""],sigmoid:[1235,2,1,""],softmax:[1236,2,1,""],softplus:[1237,2,1,""],tanh:[1238,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1240,2,1,""],conv1d_transpose:[1241,2,1,""],conv2d:[1242,2,1,""],conv2d_transpose:[1243,2,1,""],conv3d:[1244,2,1,""],conv3d_transpose:[1245,2,1,""],depthwise_conv2d:[1246,2,1,""],dropout:[1247,2,1,""],linear:[1248,2,1,""],lstm_update:[1249,2,1,""],multi_head_attention:[1250,2,1,""],scaled_dot_product_attention:[1251,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1253,2,1,""],cross_entropy:[1254,2,1,""],sparse_cross_entropy:[1255,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1257,2,1,""]},"ivy.stateful":{activations:[1261,0,0,"-"],converters:[1264,0,0,"-"],initializers:[1266,0,0,"-"],layers:[1275,0,0,"-"],module:[1287,0,0,"-"],norms:[1289,0,0,"-"],optimizers:[1291,0,0,"-"],sequential:[1297,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1262,1,1,""],GELU:[1263,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1262,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1263,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1265,2,1,""]},"ivy.stateful.initializers":{Constant:[1266,1,1,""],FirstLayerSiren:[1268,1,1,""],GlorotUniform:[1269,1,1,""],KaimingNormal:[1266,1,1,""],Ones:[1271,1,1,""],Siren:[1272,1,1,""],Uniform:[1266,1,1,""],Zeros:[1274,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1266,3,1,""],create_variables:[1266,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1268,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1269,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1266,3,1,""],create_variables:[1266,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1271,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1272,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1266,3,1,""],create_variables:[1266,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1274,3,1,""]},"ivy.stateful.layers":{Conv1D:[1276,1,1,""],Conv1DTranspose:[1277,1,1,""],Conv2D:[1278,1,1,""],Conv2DTranspose:[1279,1,1,""],Conv3D:[1280,1,1,""],Conv3DTranspose:[1281,1,1,""],DepthwiseConv2D:[1282,1,1,""],Dropout:[1283,1,1,""],LSTM:[1284,1,1,""],Linear:[1285,1,1,""],MultiHeadAttention:[1286,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1276,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1277,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1278,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1279,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1280,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1281,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1282,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1283,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1284,3,1,""],get_initial_state:[1284,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1285,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1286,3,1,""]},"ivy.stateful.module":{Module:[1288,1,1,""]},"ivy.stateful.module.Module":{__init__:[1288,3,1,""],build:[1288,3,1,""],build_mode:[1288,3,1,""],built:[1288,3,1,""],check_submod_rets:[1288,3,1,""],get_mod_key:[1288,3,1,""],mod_depth:[1288,3,1,""],mod_height:[1288,3,1,""],mod_with_top_mod_key_chain:[1288,3,1,""],save_weights:[1288,3,1,""],show_mod_in_top_mod:[1288,3,1,""],show_structure:[1288,3,1,""],show_v_in_top_v:[1288,3,1,""],sub_mods:[1288,3,1,""],track_submod_call_order:[1288,3,1,""],track_submod_rets:[1288,3,1,""],v_with_top_v_key_chains:[1288,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1290,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1290,3,1,""]},"ivy.stateful.optimizers":{Adam:[1292,1,1,""],LAMB:[1293,1,1,""],LARS:[1294,1,1,""],Optimizer:[1295,1,1,""],SGD:[1296,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1292,3,1,""],set_state:[1292,3,1,""],state:[1292,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1293,3,1,""],set_state:[1293,3,1,""],state:[1293,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1294,3,1,""],set_state:[1294,3,1,""],state:[1294,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1295,3,1,""],set_state:[1295,3,1,""],step:[1295,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1296,3,1,""],set_state:[1296,3,1,""],state:[1296,3,1,""]},"ivy.stateful.sequential":{Sequential:[1298,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1298,3,1,""]},"ivy.verbosity":{cprint:[1303,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1302,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1291,1292,1293],"02886":1258,"100":[1158,1258,1300],"141592653589793":853,"2021":1258,"2102":1258,"360":[1138,1150,1152],"718281828459045":853,"754":[853,858,859,862,875],"999":[1105,1107,1108,1112,1291,1292,1293],"abstract":[934,949,1258,1291,1295],"boolean":[40,41,862,864,874,893,911,934,969,981,984,998,1007,1008,1010,1015,1016,1050,1052,1053,1057,1058,1059,1091,1101,1105,1111,1135,1136,1137,1154,1155,1156,1158],"break":43,"case":[15,18,19,40,41,42,43,862,863,865,866,867,873,875,934,973,980,983,1008,1011,1076,1078,1079,1128,1131,1133,1158,1202,1205,1209,1258,1275,1286,1287,1288,1291,1295,1304],"catch":[1008,1031],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,400,447,448,858,860,934,936,937,938,939,940,941,943,944,946,947,948,949,961,962,984,1008,1012,1063,1105,1119,1158,1202,1204,1211,1252,1254,1255,1258,1261,1262,1263,1264,1265,1266,1268,1269,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1300,1304],"default":[15,18,19,40,41,42,43,854,855,856,857,877,878,880,881,882,883,884,886,887,889,890,891,932,933,934,943,944,951,952,956,957,958,959,960,963,964,965,966,973,976,977,978,983,984,991,992,993,994,1008,1010,1011,1013,1021,1022,1023,1024,1027,1028,1029,1040,1041,1042,1047,1050,1051,1060,1062,1063,1066,1068,1071,1074,1075,1078,1079,1082,1084,1086,1088,1089,1098,1100,1101,1105,1108,1110,1111,1112,1113,1114,1116,1120,1128,1131,1133,1154,1155,1156,1157,1158,1202,1203,1204,1206,1210,1211,1214,1215,1217,1218,1221,1223,1224,1225,1226,1227,1228,1229,1231,1232,1236,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1264,1265,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298],"final":[40,41,43,1008,1040,1061,1062,1158,1275,1286,1301],"float":[40,41,42,43,853,854,855,857,858,859,862,863,865,866,867,873,875,877,880,893,911,912,918,934,943,944,967,973,976,980,983,984,992,999,1008,1011,1021,1022,1024,1040,1041,1045,1046,1062,1080,1081,1082,1088,1089,1105,1107,1108,1110,1112,1113,1114,1121,1123,1127,1138,1146,1154,1155,1156,1157,1158,1214,1217,1218,1231,1233,1239,1247,1250,1251,1252,1253,1254,1255,1256,1257,1275,1283,1286,1289,1290,1291,1292,1293,1294,1295,1296],"function":[15,40,41,43,397,398,399,402,403,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,853,855,856,857,859,860,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,882,884,887,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,936,937,938,939,940,941,943,944,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1261,1262,1263,1291,1294,1295,1296,1300,1301,1304],"import":[43,1258,1301,1304],"int":[40,41,42,43,396,397,398,399,498,854,855,856,857,858,859,860,877,878,880,881,882,883,884,886,887,889,890,891,893,911,912,918,932,933,934,956,957,958,959,960,963,964,965,966,971,972,978,984,993,995,1000,1008,1013,1018,1023,1024,1028,1029,1032,1033,1034,1037,1040,1041,1042,1047,1051,1060,1061,1062,1070,1071,1075,1076,1078,1079,1084,1085,1086,1087,1090,1092,1093,1098,1100,1103,1105,1107,1108,1112,1121,1125,1126,1128,1131,1154,1155,1156,1157,1158,1202,1211,1214,1215,1216,1218,1219,1221,1223,1224,1225,1226,1227,1228,1229,1231,1236,1239,1240,1241,1242,1243,1244,1245,1246,1250,1252,1254,1255,1256,1257,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1289,1290],"long":[43,1239,1249],"new":[40,41,43,498,854,855,857,862,872,984,988,1008,1009,1018,1032,1033,1034,1037,1040,1041,1042,1043,1071,1076,1078,1079,1080,1081,1088,1089,1090,1105,1108,1110,1112,1113,1114,1121,1123,1125,1127,1138,1140,1144,1145,1151,1153,1158,1202,1212,1213,1214,1215,1256,1257,1258,1264,1265,1275,1285,1289,1290,1291,1292,1293,1294,1295,1296,1301,1304],"public":[1008,1025],"return":[15,16,17,18,19,40,41,42,43,498,854,855,856,857,862,863,864,865,866,867,868,869,870,871,873,874,875,877,878,879,880,883,884,886,887,889,890,891,893,911,912,918,932,933,934,943,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,969,970,972,973,977,978,979,980,981,983,984,988,989,990,991,992,993,994,995,996,997,998,999,1000,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1075,1076,1077,1078,1079,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1202,1203,1204,1206,1210,1211,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1264,1265,1275,1284,1285,1291,1295,1300,1301,1304],"short":[43,1239,1249,1258,1304],"static":[40,41,932,933],"super":1158,"true":[40,41,42,449,454,482,485,498,499,862,868,869,874,877,879,880,883,884,886,887,889,890,891,932,933,934,1008,1010,1017,1019,1036,1040,1050,1052,1101,1102,1105,1108,1110,1111,1112,1113,1114,1116,1128,1131,1154,1155,1156,1157,1158,1202,1203,1210,1214,1215,1221,1223,1224,1225,1226,1227,1228,1229,1231,1232,1239,1247,1252,1253,1254,1255,1275,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],"try":[40,41,1008,1099,1158],"var":[40,41,1154,1155,1156,1304],"while":[40,41,42,862,874,1158],AND:[862,864,889,890,1135,1136],But:1304,For:[43,862,863,865,866,867,873,875,1008,1011,1020,1090,1105,1111,1119,1128,1133,1138,1139,1258,1264,1265,1301,1304],Its:[1138,1142],NOT:[862,874],Not:853,One:[40,41,43,1008,1033,1076,1214,1216,1304],Ones:[1258,1266],PRs:43,Such:[1008,1025],That:1301,The:[15,16,17,18,19,40,41,42,43,854,856,862,863,864,865,866,867,868,869,870,871,873,874,875,877,878,879,880,881,882,886,887,889,890,891,893,911,912,918,932,933,934,943,944,950,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,973,976,977,978,979,980,983,984,988,989,990,995,996,997,998,1007,1008,1011,1014,1015,1018,1019,1021,1022,1023,1024,1026,1027,1030,1031,1035,1040,1042,1043,1049,1051,1054,1055,1056,1058,1060,1062,1064,1066,1068,1071,1072,1075,1076,1078,1079,1080,1081,1082,1085,1086,1087,1088,1089,1090,1093,1101,1104,1105,1107,1108,1110,1112,1113,1114,1116,1119,1121,1123,1125,1127,1128,1131,1133,1138,1139,1141,1142,1146,1147,1148,1149,1150,1152,1154,1155,1156,1157,1158,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1264,1265,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1293,1294,1295,1301,1304],There:[43,1258,1301],These:[43,1258],Use:43,Used:[1202,1203,1210,1287,1288],Using:[1258,1259,1304],With:[40,41,883,884,1128,1131,1221,1223,1224,1225,1226,1227,1228,1229,1258,1300,1304],__array__:[1008,1014],__call__:[1275,1286,1287,1288],__del__:1158,__dict__:[1158,1301],__enter__:1158,__exit__:1158,__getitem__:1158,__getstate__:1158,__init__:[40,41,42,43,59,60,82,217,400,401,447,448,528,660,934,935,942,943,944,945,946,947,948,949,984,985,986,987,1105,1106,1158,1162,1169,1258,1261,1262,1263,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1300,1304],__iter__:1158,__len__:1158,__next__:1158,__pow__:43,__repr__:1158,_assign_vari:1300,_axi:1158,_base:[1202,1203,1210],_compute_node_da_ratio:1158,_compute_node_strs_da:1158,_concat_unify_arrai:1158,_counter:1158,_cur_framework:[43,1158],_da_direct:1158,_da_directions_flip:1158,_da_step_tim:1158,_da_tim:1158,_da_tune_count:1158,_data:1158,_delta_da_dim_s:1158,_delta_sf:1158,_dict:1158,_dim_siz:1158,_first_da_tune_step:1158,_first_ns_tune_step:1158,_fn:1158,_forward:[1258,1300],_get_kalman_param:1304,_get_prior:1304,_get_some_model:1304,_handle_flat_arrays_in_out:43,_index:[1202,1203,1210],_input_queu:1158,_length:1158,_max_depth:1158,_max_node_dim_step_ratio:1158,_max_node_dim_step_s:1158,_max_split_factor_step_s:1158,_mean_unify_arrai:1158,_min_bas:[1008,1089,1256,1257,1289,1290],_min_denomin:[1008,1088],_min_node_dim_s:1158,_min_sf_tune_step:1158,_min_unit_node_tune_step:1158,_model:1304,_native_wrapp:43,_node_mapp:1158,_node_percent_mem:1158,_node_str:1158,_node_str_da_ratio:1158,_node_strs_da:1158,_node_strs_kei:1158,_node_strs_n:1158,_node_util:1158,_ns_step_tim:1158,_ns_time:1158,_ns_tune_count:1158,_num_nod:1158,_num_work:1158,_observed_config:1158,_output_queu:1158,_paramet:1300,_percent_mem_inc_per_sf:1158,_percent_mem_inc_per_unit_da_dim:1158,_percent_util_inc_per_unit_da_dim:1158,_ret_fn:1158,_safety_factor:1158,_save_dir:1158,_shift_da_split:1158,_shift_n:1158,_slice:1158,_step:[1291,1295],_sum_unify_arrai:1158,_timeout:1158,_tune:1158,_tune_da:1158,_tune_n:1158,_tune_step:1158,_unit_da_tune_count:1158,_unroll_step:1304,_with_node_mappig:1158,_worker:1158,_worker_class:1158,_worker_fn:1158,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,934,943,949,1158,1287,1288,1291,1295],abil:1258,abl:[40,41],about:[858,859,860],abov:[43,854,856,877,878,1214,1216],above_height:[40,41],abs:[301,449,582,715,877,880,1008,1158],absolut:[40,41,1008,1009],abstractmethod:1158,accept:[15,43,862,874,1258],access:[40,41,43,1301],accord:[40,41,858,859,1008,1024,1042,1078,1079,1098,1103],accordingli:[877,880,889,890,891],accur:[59,400,447,448,934,946,947,948,949,984,1105,1266,1268,1269,1271,1272,1274],aco:[801,1138],acosh:[801,1138],across:[40,41,934,943,944,953,954,956,957,958,959,960,966,976,977,1008,1013,1015,1016,1158,1202,1206],act:43,activ:[1232,1233,1234,1235,1236,1237,1238,1258,1262,1263],actual:1301,adam:[1105,1107,1108,1112,1258,1291,1293,1300],adam_step:1105,adam_upd:1105,adapt:[1105,1113,1291,1294],add:[40,41,43,1158,1252,1253,1254,1255,1256,1257,1258,1289,1290,1301],added:[43,1008,1088,1089,1297,1298],adding:[43,1008,1018],addit:[40,41,43,1008,1032,1033,1034,1256,1257,1275,1285],addition:43,address:43,adher:43,adjac:[1008,1011],adopt:[43,1008,1025],affect:[1008,1011],affin:[1289,1290],after:[862,875,1008,1060,1105,1108,1109,1110,1112,1113,1114,1121,1122,1256,1257,1291,1292,1293,1294,1295,1296,1304],after_1:[1008,1024,1103],after_n:[1008,1024,1103],again:43,against:[40,41,883,884,1128,1131,1221,1223,1224,1225,1226,1227,1228,1229],agnost:[43,1258,1300,1301],aim:1304,algebra:1128,algorithm:[1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282,1304],align:[40,41,43,1008,1018],aliv:[934,968,970,974,1008,1044,1069,1073],all:[15,16,17,18,19,40,41,43,115,243,434,561,693,854,856,877,880,881,882,889,932,933,934,943,968,974,1008,1009,1010,1015,1016,1025,1044,1051,1073,1087,1128,1133,1154,1155,1156,1157,1158,1202,1203,1204,1210,1211,1214,1215,1218,1221,1223,1224,1225,1226,1227,1228,1229,1239,1249,1258,1301,1304],all_depth:[40,41],all_equ:1008,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1202,all_tru:[40,41],alloc:[43,854,856,934,1158],allow:[1008,1061,1062,1063,1287,1288],allow_dupl:[1008,1063],alon:[934,973,983,1158,1258],along:[40,41,43,498,877,880,881,882,883,884,886,887,889,890,891,934,957,958,959,960,963,964,965,966,978,1008,1023,1028,1029,1042,1060,1061,1062,1075,1086,1090,1093,1100,1128,1131,1154,1155,1156,1157,1158,1214,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],alongsid:[1300,1301],alpha:[1231,1233],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,862,865,934,1158],also:[40,41,43,1008,1011,1105,1108,1154,1155,1156,1157,1202,1203,1204,1210,1211,1239,1248,1258,1275,1285,1300],altern:1300,alwai:[40,41,43,1105,1111,1116],among:[40,41],amount:[934,980,1158,1258],angl:[862,867,1138,1139,1143],ani:[15,16,17,18,19,40,41,43,115,243,434,561,693,862,871,889,932,933,934,936,939,943,944,946,955,956,959,960,965,1008,1010,1011,1014,1031,1032,1033,1034,1035,1036,1049,1050,1058,1063,1088,1089,1105,1109,1158,1202,1203,1206,1210,1211,1212,1213,1214,1218,1258,1264,1265,1287,1288,1300,1301,1304],anoth:[40,41,43,984,990,1258],another_backend:43,anyth:[43,1304],anywai:43,apart:43,api:[1258,1259],appear:[43,1008,1037],append:[40,41,877,878,1158],appli:[15,18,19,40,41,877,879,1008,1032,1033,1034,1105,1112,1113,1135,1136,1137,1154,1155,1156,1202,1206,1209,1211,1231,1232,1233,1234,1235,1236,1237,1238,1239,1248,1250,1251,1256,1257,1258,1261,1262,1263,1289,1290],applic:[1202,1206,1211,1239,1250,1251,1258,1304],appropri:[883,884],approxim:[43,862,863,866,867,872,873,893,918,1231,1232],arang:[135,301,449,498,582,715,1008,1061,1062],arbitrari:[40,41,934,963,964,966,1158],arc:[1138,1143],arcco:[1138,1139],arctan:[1138,1142],area:[862,863,1258],arg:[15,16,17,40,41,43,59,63,934,943,956,960,966,978,1008,1032,1033,1034,1079,1158,1264,1265,1287,1288],arg_nam:1008,arg_stateful_idx:[1287,1288],argmax:[109,237,428,555,687,883],argmin:[135,449,582,715,1008],args_clon:1158,args_dist:1158,args_to_ivi:[15,1258],args_to_n:[15,1258],args_uni:1158,argsort:[112,240,431,558,690,886],argument:[15,16,17,18,19,40,41,42,43,59,63,932,933,934,943,944,956,960,966,1008,1011,1012,1019,1031,1063,1079,1138,1139,1158,1202,1206,1264,1265,1287,1288],aris:[1258,1304],arithmet:[43,1221,1224,1227,1229],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:498,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,135,301,449,498,582,715,854,855,856,857,858,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,883,884,886,887,889,890,891,911,912,918,934,952,953,954,957,958,959,960,963,964,965,966,968,970,974,978,979,984,988,994,999,1000,1008,1009,1010,1011,1013,1015,1016,1017,1018,1020,1021,1022,1023,1024,1026,1027,1028,1029,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1047,1049,1050,1051,1052,1053,1054,1055,1056,1058,1059,1060,1061,1062,1064,1065,1066,1067,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1084,1086,1087,1090,1091,1092,1093,1095,1096,1097,1098,1100,1101,1102,1103,1104,1105,1107,1108,1111,1112,1116,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1158,1202,1204,1211,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1275,1283,1284,1286,1291,1295,1300,1301],arrang:[1008,1032],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,396,397,398,399,400,402,403,853,854,855,856,857,858,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,883,884,886,887,889,890,891],array_api_methods_to_test:43,array_builtin:[43,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931],array_equ:[301,715,1008],array_lik:[498,1008,1014],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1008],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1258],arraywithgener:[22,1258],arraywithgradi:[24,1258],arraywithimag:[26,1258],arraywithlinalg:[28,1258],arraywithlog:[30,1258],arraywithmath:[32,1258],arraywithmeta:[34,1258],arraywithrandom:[36,1258],arraywithreduct:[38,1258],arriv:[40,41,42],articl:1258,arxiv:1258,as_arrai:[40,41,1008,1047,1084],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[447,449,457,934,952,984,991,992,993,994],as_tensor:449,as_vari:[40,41],as_zero:[40,41],asarrai:[449,1008],ascend:[886,887],asin:[801,1138],asinh:[86,405,532,664,862],aspect:[1121,1126],assert:[40,41,1008,1017,1158],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1008,associ:[43,1128,1134],assum:[862,866,1301,1304],astyp:[449,984],asynchron:[40,41,42],at_dev:[40,42,934,947,948],at_kei:[40,41],at_key_chain:[40,41],at_nod:1158,atan2:[801,1138],atan:[801,1138],atanh:[801,1138],attent:[43,1239,1250,1251,1275,1286],attribut:[0,6,40,41,858,859,860,1008,1072,1104],audienc:[1258,1301],author:1258,automat:43,avail:[40,41,43,934,969,971,972,981,1008,1033,1158],averag:[1105,1107,1108,1112,1154,1155,1156,1221,1224],average_across_step:[1154,1155,1156],avoid:[43,934,1158,1301],axes:[40,41,43,449,479,491,492,877,880,881,882,883,884,889,890,891,934,978,1008,1013,1024,1037,1092,1098,1103,1128,1131,1158,1221,1223,1224,1225,1226,1227,1228,1229],axes_length:[40,41,1008,1032,1033,1034],axi:[40,41,449,451,455,456,462,470,471,472,477,478,480,877,878,880,881,882,883,884,886,887,889,890,891,934,936,939,946,957,958,959,960,963,964,965,966,978,1008,1013,1023,1024,1027,1028,1029,1037,1042,1060,1061,1062,1075,1086,1087,1090,1092,1093,1100,1103,1158,1214,1220,1221,1223,1224,1225,1226,1227,1228,1229,1231,1236,1252,1254,1255],axis0:[40,41,1008,1092],axis1:[40,41,877,878,1008,1092],axis2:[877,878],back:[43,1287,1288,1291,1295],backend:[15,17,19,40,41,396,397,398,399,400,402,403,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,496,497,498,499,934,969,972,981,984,990,998,1007,1008,1053,1057,1105,1108,1110,1112,1113,1114,1119,1158,1258,1259,1264,1265,1291,1292,1293,1294,1295,1296,1300,1301,1304],backend_nam:43,background:[1258,1301],backprop:1304,backward:[889,890,891,1300],band:[1008,1040],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,400,447,448,449,472,862,872,873,893,918,934,936,937,938,939,940,941,943,944,946,947,948,949,984,1008,1045,1062,1080,1089,1105,1158,1221,1222,1258,1261,1262,1263,1266,1268,1269,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1304],basi:43,batch:[40,41,877,879,880,934,976,977,1008,1040,1051,1121,1125,1154,1155,1156,1157,1158,1239,1248,1256,1257,1289,1290],batch_shap:[449,464,1008,1051,1070,1121,1122,1123,1124,1125,1126,1127,1128,1134,1214,1215,1239,1249,1250,1251,1275,1284],batch_siz:[498,499,1158,1214,1215,1239,1240,1241,1242,1243,1244,1245,1246],bayesian:1304,becaus:[43,1008,1011],becom:[43,1008,1020,1138,1143,1304],been:[1008,1032,1033,1034,1214,1215],befor:[40,41,43,934,978,1154,1155,1156,1158,1202,1211,1221,1223,1224,1225,1226,1227,1228,1229,1239,1250,1251,1304],before_1:[1008,1024,1103],before_n:[1008,1024,1103],begin:[1202,1203,1210,1301],behaviour:[43,1304],behind:[1105,1108,1110,1112,1113,1114,1258],being:[40,41,43,1008,1011,1074,1082,1158],believ:43,belong:[40,41],below:[43,854,856,877,878,1258,1301,1304],below_depth:[40,41],benefit:1258,bernoul:[1239,1247,1275,1283],best:[43,1008,1063,1258],beta1:[1105,1107,1108,1112,1291,1292,1293],beta2:[1105,1107,1108,1112,1291,1292,1293],beta:[1256,1257],between:[40,41,42,858,859,1008,1011,1128,1133,1202,1206,1214,1216,1252,1254,1255,1291,1293],bia:[1239,1248,1249,1275,1276,1277,1278,1279,1280,1281,1282,1285],bias_initi:[1275,1276,1277,1278,1279,1280,1281,1282,1285],bilinear:[1121,1122],bilinear_resampl:[170,355,487,623,787,1121],bilinearli:[1121,1122],binari:[862,864,1252,1253],binary_cross_entropi:1252,bit:[400,858,859,860,984,995,1121,1123,1127,1258],bitwis:[862,864],bitwise_and:[86,221,405,532,664,862],bitwise_oper:[0,7,8],block:[1258,1301],bool:[15,18,19,40,41,42,43,862,868,869,870,871,874,877,879,880,883,884,886,887,889,890,891,893,912,932,933,934,952,965,969,973,978,981,983,984,994,1008,1010,1015,1016,1028,1031,1035,1036,1040,1047,1049,1050,1058,1063,1084,1086,1100,1101,1102,1105,1108,1109,1110,1111,1112,1113,1114,1116,1128,1131,1154,1155,1156,1157,1158,1202,1203,1204,1206,1210,1211,1214,1215,1221,1223,1224,1225,1226,1227,1228,1229,1231,1232,1239,1247,1264,1265,1275,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],both:[43,1008,1027],bottom:1258,boundari:[40,41,1214,1218],branch:[43,932,933],brittl:43,broadcast:[40,41,43,862,864,870,871,877,880,883,884,889,890,891,893,911,912,918,1008,1018,1035,1049,1065,1066,1067,1075,1128,1131,1138,1143,1146,1221,1223,1224,1225,1226,1227,1228,1229],broadcast_to:[301,715,1008],build:[1158,1258,1275,1286,1287,1288],build_mod:[1275,1286,1287,1288],builder:[43,1258],built:[934,1008,1011,1158,1275,1286,1287,1288],builtin:43,builtin_ab:[256,893],builtin_add:[256,893],builtin_and:[256,893],builtin_bool:[256,893],builtin_contain:[256,893],builtin_deepcopi:[256,893],builtin_dir:[256,893],builtin_eq:[256,893],builtin_float:[256,893],builtin_floordiv:[256,893],builtin_g:[256,893],builtin_getattr:[256,893],builtin_getattribut:[256,893],builtin_getitem:[256,893],builtin_gt:[256,893],builtin_int:[256,893],builtin_invert:[256,893],builtin_l:[256,893],builtin_lt:[256,570,702,893],builtin_mul:[256,893],builtin_n:[256,893],builtin_neg:[256,893],builtin_or:[256,893],builtin_po:[256,893],builtin_pow:[43,256,893],builtin_radd:[256,893],builtin_rand:[256,893],builtin_rfloordiv:[256,893],builtin_rmul:[256,893],builtin_ror:[256,893],builtin_rpow:[256,893],builtin_rsub:[256,893],builtin_rtruediv:[256,893],builtin_rxor:[256,893],builtin_setitem:[256,893],builtin_some_op:43,builtin_sub:[256,893],builtin_truediv:[256,893],builtin_xor:[256,893],busi:43,bypass:1301,cach:[934,950,1008,1019],cache_fn:1008,calcul:[40,41,42,43,862,863,866,867,872,873,875,893,911,918,1138,1146],call:[43,934,978,1008,1074,1082,1099,1105,1109,1158,1202,1203,1206,1210,1275,1286,1287,1288,1291,1295,1301,1304],callabl:[40,41,932,933,934,943,944,978,1008,1019,1031,1033,1063,1099,1154,1155,1156,1157,1158,1202,1206,1207,1208,1210,1211,1239,1250],can:[43,934,976,977,978,1008,1076,1121,1123,1158,1258,1300,1301,1304],cancel_join_thread:1158,cannot:43,captur:1258,cast:[40,41,135,301,449,582,715,984,1008,1023,1121,1123,1127],catch_except:[1008,1031],categori:43,caus:43,ceil:[86,221,405,532,664,862,1008,1011],cell:[1239,1249,1275,1284],certain:[40,41,1008,1011,1061,1062],chain:[40,41,1154,1155,1156,1297,1298],chang:[43,934,1008,1076,1158,1202,1204,1211,1258,1300],channel:[1008,1040,1121,1123,1124,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285],check:[15,16,17,18,19,40,41,43,934,973,983,984,989,998,1007,1008,1017,1036,1050,1058,1091,1101,1105,1111,1158,1202,1203,1210,1258,1301],check_nest:[1202,1210],check_shap:[40,41],check_submod_ret:[1287,1288],check_typ:[40,41],choic:[1258,1301],choleski:[791,1128],choos:[862,874,1008,1102,1128,1133,1138,1143,1258],choose_random_framework:59,chosen:[40,41,1008,1011,1102],chunk:[934,976,977,978,1158],chunk_siz:[934,978,1158],circl:[1138,1139,1141],clark:1258,clear:[43,934,950,1158],clear_framework_stack:59,clear_mem_on_dev:[447,707,934],click:1258,clip:[40,41,301,449,715,1008,1021,1022,1065,1067,1258],clip_matrix_norm:1008,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1008],clipped_delta:1158,clone:[40,41,934,953,954,955,956,1158],clone_arrai:1158,clone_it:1158,clone_nest:1158,clonedit:1158,cloneditem:1158,clonednest:1158,close:[43,1121,1126,1138,1141,1158,1304],closest:[862,865,984,989],closest_valid_dtyp:984,code:[40,41,42,43,498,1258,1259,1300,1301],codebas:[934,976,977,1158,1258,1301,1304],codomain:[862,863,866,867,873,875],colab:1258,collect:[15,40,41,447,449,482,487,491,495,496,498,893,932,934,984,1008,1105,1121,1128,1135,1138,1158,1202,1214,1221,1231,1239,1252,1256,1261,1275,1289,1291],color:[40,41,42,1302,1303],column:[1008,1051],combin:[40,41,42,1121,1126,1258,1304],combined_batch_s:1158,come:1301,command:1258,comment:43,commit:1304,common:[40,41,43,1138,1143],common_key_chain:[40,41],commun:[43,1258,1301],communuti:43,compar:[40,41,886,887,893,911,1008,1010,1015,1016],comparison_oper:[0,9,10],compat:[43,862,864,870,871,877,880,889,890,891,893,911,912,918,1008,1035,1049,1076,1138,1146,1258,1304],compil:[301,449,715,1287,1288,1291,1292,1293,1294,1295,1296],compile_on_next_step:[1287,1288,1291,1292,1293,1294,1295,1296],complet:[40,41,43,1128,1133,1158],complex:[1301,1304],compliant:[862,874],compon:[1008,1027],composit:43,comput:[40,41,862,864,870,871,874,877,880,893,912,934,978,1008,1021,1022,1028,1029,1035,1049,1064,1105,1107,1108,1109,1110,1112,1113,1114,1116,1118,1121,1124,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1141,1142,1143,1147,1148,1149,1150,1152,1202,1206,1221,1222,1223,1224,1225,1226,1227,1228,1229,1239,1240,1241,1242,1243,1244,1245,1246,1248,1250,1252,1253,1254,1255],concat:[40,41,934,963,964,965,966,978,1008,1040,1158],concaten:[40,41,135,301,449,582,715,1008,1040,1158,1258],concatten:[40,41,934,963,964,965,966,978,1158],condit:[449,932,933,1008,1102,1202,1210],conditon:[1202,1210],config:[40,41,1158],config_list:1158,configur:[40,41],conflict:43,conform:43,conjunct:1301,connect:[1275,1285,1286],consid:[40,41,862,874,1128,1133,1300,1304],consist:[40,41,934,966,1158,1221,1222,1287,1288,1301],constant:[934,943,944,1008,1024,1158,1202,1206,1252,1253,1254,1255,1256,1257,1266,1267,1271,1274,1287,1288,1289,1290,1301],constant_kwarg:1158,constant_pad:[301,449,582,715,1008],constitu:[40,41],construct:[1008,1093,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1300],constructor:[40,41,42,1008,1012,1297,1298],consum:[934,1158],cont_feat_dim:[1239,1250],contaienr:[40,41],contain:[15,18,19,42,43,854,855,856,857,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,880,889,890,891,893,911,912,918,934,953,957,978,984,988,1008,1009,1013,1020,1021,1022,1025,1035,1049,1050,1065,1067,1077,1088,1089,1105,1107,1108,1110,1112,1113,1114,1138,1146,1154,1155,1156,1157,1158,1214,1215,1221,1223,1224,1225,1227,1229,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[449,715,1008],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[449,1008,1068,1239,1250,1275,1286],context_dim:[1275,1286],contextmanag:[59,60],continu:[43,1158,1301],contract:[40,41,1221,1222],contribut:[1258,1259],contributor:[43,1258],control:1258,conv1d:[201,385,512,843,1239,1258,1275],conv1d_transpos:[201,385,512,843,1239],conv1dtranspos:[1258,1275],conv2d:[201,385,512,648,843,1239,1258,1275],conv2d_transpos:[201,385,512,843,1239],conv2dtranspos:[1258,1275],conv3d:[201,385,512,648,843,1239,1258,1275],conv3d_transpos:[201,385,512,843,1239],conv3dtranspos:[1258,1275],convent:[40,41,1221,1222],conver:[934,950,961,973,980,983,1158],convers:[16,17,18,19,40,41,1158,1258],convert:[15,16,17,18,19,40,41,43,934,961,962,984,990,996,997,1008,1085,1096,1097,1121,1123,1127,1128,1134,1158,1202,1204,1211,1258,1265],convert_dtyp:984,convolut:[1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282],cool:43,cooler:43,coordin:[1008,1066,1138,1139,1141,1143],copi:[40,41,43,498,1008,1026,1158,1202,1204],copy_arrai:[449,715,1008],copy_nest:1202,core:[447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,496,497,498,499,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,936,937,938,939,940,941,943,944,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1258],corner:43,correct:[43,1258,1301],correctli:[40,41,43,883,884,1128,1131,1138,1143,1221,1223,1224,1225,1226,1227,1228,1229],correspond:[40,41,43,893,918,1008,1023,1214,1215],cos:[86,405,532,664,862,1008,1040,1138,1139,1152,1301],cosh:[86,405,532,664,801,862,1138],cosin:[862,866,867,1138,1139,1140,1145],cost:[1105,1107,1108,1110,1112,1113,1114,1154,1155,1156,1157],cost_fn:[1154,1157],could:1304,count:[40,41,881,882,889,890,891,1158,1221,1226,1228],cours:43,cprint:1302,cpu:[40,41,43,934,971,973,979,980,983,1008,1011,1014,1042,1043,1051,1061,1062,1070,1071,1072,1078,1079,1104,1158,1214,1215,1216,1217,1218,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1297,1298,1300,1301],creat:[40,41,854,855,857,934,943,944,1008,1011,1014,1041,1042,1043,1051,1061,1062,1070,1071,1072,1078,1079,1095,1104,1105,1118,1158,1214,1215,1216,1217,1218,1258,1259,1264,1265,1266,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1300,1304],create_if_abs:[40,41],create_vari:1266,creation:[40,41,42,43],creation_funct:[396,397,398,399,854,855,856,857],crop:[1121,1125],crop_siz:[1121,1125],cross:[301,715,1008,1252,1253,1254,1255],cross_entropi:1252,cuda:[40,41,934,943,962,979,1008,1011,1014,1042,1043,1051,1061,1062,1070,1071,1072,1078,1079,1104,1158,1214,1215,1216,1217,1218,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1297,1298],cumprod:[135,301,449,715,1008],cumsum:[715,1008],cumul:[1008,1028,1029],current:[40,41,42,43,934,943,967,968,970,974,984,990,998,1007,1008,1030,1044,1053,1057,1069,1073,1158,1202,1203,1210,1258,1304],current_framework:59,current_framework_str:[449,715,1008,1158],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1239,1240,1241,1242,1243,1244,1245],d_out:[1239,1240,1241,1242,1243,1244,1245],da_can_termin:1158,da_dim_s:[934,1158],da_direct:1158,da_tune_step:[934,1158],dai:1304,daniel:1258,data:[40,41,42,43,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,873,874,875,877,878,880,881,882,886,887,889,890,891,893,911,912,918,934,936,937,938,939,940,941,946,947,948,962,984,988,989,990,994,995,996,997,998,999,1000,1007,1008,1011,1014,1035,1041,1049,1051,1058,1071,1072,1076,1087,1091,1104,1105,1111,1119,1138,1146,1158,1239,1248,1258],data_format:[1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282],data_type_funct:[400,402,403,858,859,860],dataset:[40,41],datatyp:[40,41,984,989,999,1000],dcdw:[1105,1107,1108,1110,1112,1113],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1105,1112,1113,1291,1293,1294],decay_lambda:[1105,1112,1113,1291,1293,1294],decid:[40,41,1304],decompos:[1128,1129,1133],decomposit:[877,879,1128,1129,1133],decor:43,decrement:[1008,1054],dedic:[1105,1119,1264,1265],deep:[40,41,1258],deep_copi:[40,41],deeper:[934,956,960,966,1158,1202,1211,1258],deepli:[1202,1204],def:[43,60,82,217,401,528,660,935,942,945,985,986,987,1106,1158,1162,1169,1258,1267,1270,1273,1300,1301,1304],default_dev:43,default_devic:934,default_dtyp:[43,984],default_float_dtyp:984,default_int_dtyp:984,default_key_color:[40,41,42],default_nod:1158,default_rng:498,default_v:[1008,1031],defaultdevic:[934,935],defaultdtyp:[984,985],defaultfloatdtyp:[984,986],defaultintdtyp:[984,987],defer:43,defin:[43,1008,1027,1070,1072,1104,1214,1216],definit:43,degre:[1138,1150,1152],del:1158,delai:43,delet:43,delta:[1105,1107,1158],delta_dim_s:1158,delta_percent_mem:1158,delta_sf:1158,delta_util:1158,demo:1258,denomin:[1008,1039,1046,1081,1088,1089,1256,1257,1289,1290],denot:43,dens:[1275,1285],depend:[43,862,863,866,867,872,873,877,879,886,887,893,918,1008,1102,1258],depth:[40,41,449,473,934,956,960,966,1008,1048,1070,1158,1202,1211,1287,1288],depth_cutoff:[40,41],depthwis:[1239,1246,1275,1282],depthwise_conv2d:[201,385,512,648,843,1239],depthwiseconv2d:[1258,1275],deriv:[1105,1107,1108,1110,1112,1113,1114,1202,1204,1211,1258,1287,1291,1295,1297],descend:[877,879,886,887],descent:[1105,1110,1291,1296],describ:[40,41,1221,1222],descript:[877,880],design:[1258,1259],desir:[40,41,934,979,984,988,1008,1011,1014,1051,1052,1071,1072,1104,1121,1126,1158,1221,1223,1224,1225,1227,1229],desired_aspect_ratio:[487,490,1121,1126],desired_percent_increas:1158,detail:1304,detect:[40,41,1202,1203,1210],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,862,863,864,866,867,868,869,873,875,877,878,880,889,890,891,893,918,934,969,971,972,981,984,988,989,995,998,999,1000,1007,1008,1010,1011,1014,1015,1016,1050,1053,1057,1058,1091,1101,1105,1111,1138,1146,1154,1155,1156,1157,1158,1239,1250],dev:[40,41,42,43,128,295,447,449,450,452,462,463,464,471,472,473,474,475,476,481,498,499,575,707,934,937,938,940,941,943,944,947,948,950,951,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,970,973,974,975,976,977,978,979,980,983,1008,1011,1014,1042,1043,1051,1061,1062,1070,1071,1072,1078,1079,1104,1105,1120,1214,1215,1216,1217,1218,1264,1265,1266,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1297,1298],dev_clon:[40,41,934],dev_clone_arrai:934,dev_clone_it:934,dev_clone_nest:934,dev_dist:[40,41,934],dev_dist_arrai:934,dev_dist_it:934,dev_dist_nest:934,dev_from_str:[43,128,295,447,575,707,934],dev_mapp:934,dev_str:[40,41],dev_to_str:[128,295,447,575,707,934],dev_unifi:934,dev_unify_arrai:934,dev_unify_it:934,dev_unify_nest:934,dev_util:934,devclonedit:934,devcloneditem:934,devclonednest:934,devdistit:934,devdistitem:934,devdistnest:934,develop:[43,1258,1301,1304],deviat:[40,41,1214,1217,1221,1227,1256,1257,1289,1290],devic:[21,40,41,43,396,397,399,448,449,461,854,855,856,857,936,937,938,939,940,941,943,944,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,1008,1011,1014,1041,1042,1043,1051,1061,1062,1070,1071,1072,1078,1079,1104,1105,1120,1214,1215,1216,1217,1218,1258,1264,1265,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1297,1298],devmanag:[934,942],devmapp:[934,944],devmappermultiproc:934,diag:[877,879],diagon:[103,231,422,549,681,854,856,877,1008,1051],dict:[15,16,17,18,19,40,41,42,934,936,939,943,944,946,956,957,958,959,960,1008,1032,1033,1034,1063,1154,1155,1156,1158,1202,1204,1205,1206,1209,1211,1264,1265],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,858,859,934,953,954,957,958,1128,1133,1158,1239,1248,1258,1301,1304],differenti:[1258,1301],dilat:[1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282],dim:[40,41,43,877,879,1008,1070,1121,1122,1126,1158,1275,1286],dim_siz:[40,41,934,1158],dimens:[40,41,42,854,856,877,878,879,880,881,882,883,884,889,890,891,934,965,1008,1018,1023,1027,1032,1033,1034,1037,1040,1047,1060,1070,1075,1076,1086,1087,1090,1098,1100,1121,1125,1128,1131,1154,1155,1156,1157,1158,1214,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1236,1239,1240,1241,1242,1243,1244,1245,1246,1249,1252,1254,1255,1275,1276,1277,1278,1279,1280,1281,1282,1285,1286],dimension:[40,41,498,877,879,880,889,890,891,1008,1086,1087],direct:1158,directli:[43,1202,1211,1301,1304],directori:[1008,1083,1094],discord:43,discret:[1252,1254],discuss:43,disk:[40,41,1121,1123],distanc:[1008,1011],distribut:[40,41,934,953,957,958,959,960,1158,1214,1215,1216,1217,1218,1239,1247,1275,1283,1287,1288],distribute_nest:1158,distributedarrai:[40,41],distrubt:[1252,1254],dive:[1258,1301],divid:[40,41,1008,1086,1088,1138],dividend:[1138,1146],divis:[1008,1039,1046,1081,1088,1089,1105,1107,1108,1112,1138,1146,1291,1292,1293],divisor:[1105,1107,1108,1112,1138,1146,1291,1292,1293],doc:1258,docstr:43,document:43,doe:[40,41,43,1008,1011,1086,1300],doesn:[1128,1133,1258],doing:43,domain:[862,863,866,867,873,875,1138,1139],don:[43,1258],done:43,door:1304,dot:[1128,1130,1239,1250,1251,1275,1286],down:1300,downscal:[1008,1021,1022],drag:[1258,1304],draw:[1214,1215,1217,1218],drawn:[1214,1215,1216,1217,1218],drop:[1258,1304],dropout:[1239,1258,1275,1286],dropout_r:[1275,1286],ds_tune_step:934,dtype:[40,41,43,135,301,396,397,399,400,402,403,449,450,452,453,461,464,474,481,582,715,854,855,857,858,859,860,883,884,988,989,990,991,992,993,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1011,1014,1041,1051,1070,1071,1072,1104],dtype_bit:[135,301,449,582,715,984],dtype_from_str:[43,135,301,449,582,715,984],dtype_in:[449,458,459,460,984,990,995,996,997,998,999,1000,1007],dtype_to_str:[135,301,449,582,715,984],duplic:[40,41,43],dure:[40,41,43,932,933,1008,1099,1105,1107,1108,1112,1154,1155,1156,1157,1287,1288,1291,1292,1293,1295],dynam:[43,449,454,932,933],each:[40,41,42,43,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,879,893,912,918,934,943,944,953,954,955,956,957,958,959,965,977,978,1008,1009,1010,1024,1035,1049,1075,1086,1090,1093,1103,1105,1108,1110,1112,1113,1114,1121,1124,1138,1141,1146,1148,1149,1158,1202,1206,1214,1215,1221,1222,1239,1240,1241,1242,1243,1244,1245,1246,1247,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1301],eager:1301,easi:1304,easili:1258,econom:1304,ecosystem:1258,edg:[1008,1020,1024,1103],effect:[1105,1114],effective_grad:[1105,1114],effici:1304,einop:[40,41,1008,1032,1033,1034],einops_rearrang:[40,41,1008],einops_reduc:[40,41,1008],einops_repeat:[40,41,1008],einstein:[40,41,1221,1222],einsum:[40,41,187,373,500,638,823,1221],either:[40,41,43,862,873,1008,1031,1063,1066,1068,1154,1155,1156,1157,1158,1275,1286,1287,1288,1301],eleg:1158,element:[40,41,43,498,854,856,862,863,864,865,866,867,868,869,870,871,872,873,874,875,881,882,889,890,891,893,911,912,918,934,955,959,965,984,988,1008,1009,1011,1013,1015,1016,1020,1021,1022,1028,1029,1035,1038,1039,1049,1051,1052,1065,1067,1075,1077,1086,1097,1102,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1158,1221,1222,1224,1226,1228,1231,1232,1233,1234,1235,1236,1237,1238,1239,1247,1275,1283],elementwis:[40,41,893,911],elementwise_affin:[1289,1290],elementwise_funct:[862,863,864,865,866,867,868,869,870,871,872,873,874,875],elemtn:[1214,1215],elif:1158,els:[43,1008,1017,1031,1036,1158],elsewher:[1008,1102],emphas:1258,empti:[40,41,889,890,891,1128,1133,1158],enabl:[40,41,42,43,1258],encapsul:[858,860],encod:[1008,1040,1121,1123],end:[1008,1011,1258,1301],engag:43,ensur:43,entir:[40,41,889,890,891,934,978,1158,1258,1275,1284],entri:[40,41,1008,1061,1062,1086,1087],entropi:[1252,1253,1254,1255],enumer:1158,environ:1258,eps:[400,858,859],epsilon:[1105,1107,1108,1112,1252,1253,1254,1255,1256,1257,1289,1290,1291,1292,1293],equal:[40,41,86,405,532,664,715,862,868,877,878,886,887,1008,1010,1015,1016,1024,1086,1103,1138,1150,1152,1214,1218],equality_matrix:[1008,1010],equat:[40,41,1221,1222],equival:[862,874,877,880,1008,1011,1138,1152],erf:[496,801,1138],error:[40,41,43,934,1008,1087,1138,1147,1158,1231,1232,1287,1288,1291,1295],essenti:43,etc:[40,41,43,934,979,1008,1011,1014,1042,1043,1051,1061,1062,1070,1071,1072,1078,1079,1104,1158,1214,1215,1216,1217,1218,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1297,1298,1304],euclidean:[877,880],euler:853,evalu:[40,41,862,872,873,889,890,891,1008,1066,1202,1203,1210],even:[43,1304],evenli:[40,41,1008,1011,1061,1062,1086],everi:[43,1008,1010,1304],exact:[40,41],exampl:[43,932,933,1008,1020,1090,1128,1133,1258,1300,1301,1304],example_input:[449,454,932,933],exc_tb:1158,exc_typ:1158,exc_val:1158,exce:[1008,1067],except:[40,41,44,47,889,890,891,1008,1011,1017,1023,1031,1099,1158],excess_s:1158,excit:[1258,1301],exclud:[59,61,1008,1011,1214,1218],exclus:[40,41,449,456,469,482,484,1008,1028,1058,1105,1111,1214,1216],execut:[43,1008,1099,1301],execute_with_gradi:[167,350,482,618,781,1105,1258,1300],exist:[40,41,1008,1031,1158,1258,1291,1295,1304],exp:[801,1138],expand:[40,41,1008,1037,1040],expand_dim:[40,41,301,715,1008,1158],expect:[1008,1012],explain:[43,1301],explicitli:[43,1275,1284,1286,1287,1288,1301],expon:[43,893,918,1008,1089],exponenti:[43,893,918,1138,1147,1148],expos:[1008,1014,1025],express:[862,866,1008,1066],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1105,1109],eye:[1128,1130],fabian:1258,fabio:1258,factor:[877,879,934,943,976,977,978,1105,1107,1108,1112,1113,1158,1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282,1291,1292,1293,1294],fail:43,falck:1258,fall:[1287,1288,1291,1295],fallback_to_non_compil:[1287,1288,1291,1295],fals:[15,18,19,40,41,42,59,66,67,68,69,70,447,449,456,457,469,477,480,482,483,484,491,492,862,868,869,874,877,880,883,884,886,887,889,890,891,934,952,965,973,978,983,984,991,992,993,994,1008,1010,1028,1031,1036,1040,1047,1058,1063,1084,1086,1100,1102,1105,1108,1109,1110,1111,1112,1113,1114,1128,1131,1154,1155,1156,1157,1158,1202,1203,1204,1206,1210,1211,1221,1223,1224,1225,1226,1227,1228,1229,1264,1265,1287,1288,1291,1292,1293,1294,1295,1296],fan_in:1266,fan_mod:1266,fan_out:1266,far:[1202,1203,1210,1300],faster:[932,933],favourit:[1258,1300],feasibl:1304,feat_dim:[1239,1250,1251],fed:[934,978,1158],feed:[934,978,1158],few:43,field:1304,file:[40,41,43,1008,1083,1094,1287,1288],filepath:[40,41],fill:[40,41,854,855,857,1008,1041,1071,1214,1216],fill_valu:[449,461,1008,1041],filter:[1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282,1304],filter_s:[1275,1276,1277],filter_shap:[1275,1278,1279,1280,1281,1282],find:[40,41,43,1304],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,216,217,400,401,527,528,659,660,858],finish:[1258,1304],finit:[862,868],first:[40,41,43,498,862,864,870,871,877,878,879,893,911,932,933,934,965,1008,1015,1023,1027,1035,1049,1061,1062,1090,1092,1105,1109,1154,1155,1156,1157,1158,1202,1203,1210,1214,1220,1221,1226,1228,1275,1286,1287,1288,1291,1295,1301,1304],firstlayersiren:[1258,1266],firstli:[1301,1304],fist:[934,978,1158],fit:[40,41,447,449,482,487,491,495,496,498,1008,1075,1121,1126],fix:43,fkt:1304,flag:[40,41,43,1105,1111],flat:[40,41,43,1008,1075,1078],flat_list:[40,41],flatten:[40,41,877,880,883,884,1008,1040,1075,1221,1223,1224,1225,1227,1229],flatten_key_chain:[40,41,1287,1288],flexibl:[1258,1301],flip:[40,41,107,235,426,553,685,881],float32:[43,449,464,984,988,996,997,1008,1011,1014,1051,1071,1072,1104],float_dtyp:[984,992,1002],float_img_to_uint8_img:1121,floor:[301,449,715,1008,1039,1158],floormod:[301,449,715,1008],fluid:1304,folder:[43,1258],follow:[40,41,43,858,860,877,880,934,978,1008,1054,1055,1056,1088,1089,1105,1108,1110,1112,1113,1114,1158,1202,1206,1211,1239,1250,1251,1258,1275,1285,1291,1295],followng:[858,859],fomaml_step:1154,forget:[1105,1107,1108,1112,1291,1292,1293],fork:[1008,1068,1258,1259],forkserv:[1008,1068,1158],form:[15,16,17,18,19,40,41,854,856,877,878,1008,1014,1105,1108,1110,1112,1113,1114,1202,1204,1211,1239],format:[40,41,43,934,952,984,988,990,994,1008,1011,1014,1051,1071,1072,1104,1158,1221,1222,1258,1300,1301],format_fn:[40,41],format_key_chain:[40,41],forward:[1287,1288,1291,1295,1300],found:[40,41,42],fourier:[1008,1040],fourier_encod:1008,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,110,113,116,117,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,175,176,177,181,182,183,184,185,186,188,189,190,191,192,193,194,197,199,200,202,203,204,205,206,207,208,213,214,215,217,218,219,222,223,224,225,226,227,228,229,232,233,234,236,238,241,244,245,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,356,357,358,360,361,362,363,365,366,369,370,371,372,374,375,376,377,378,379,380,381,384,386,387,388,389,390,391,392,397,398,399,401,402,403,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,423,424,425,427,429,432,435,436,448,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,488,489,490,492,493,494,497,499,501,502,503,504,505,506,507,510,511,513,514,515,516,517,518,519,524,525,526,528,529,530,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,550,551,552,554,556,559,562,563,571,576,577,578,579,580,581,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,619,620,621,622,624,625,626,628,629,630,634,635,636,637,639,640,641,642,643,644,645,649,650,651,656,657,658,660,661,662,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,682,683,684,686,688,691,694,695,703,708,709,710,711,712,713,714,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,782,783,784,785,786,788,789,790,792,793,794,795,796,797,799,800,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,824,825,826,827,828,829,830,833,834,835,836,837,838,839,841,842,844,845,846,847,848,849,850,855,856,857,859,860,863,864,865,866,867,868,869,870,871,872,873,874,875,878,879,880,882,884,887,890,891,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1225,1226,1227,1228,1229,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1257,1258,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1303,1304],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1158,framewrk:[1008,1068],free:43,freed:43,freeli:43,frequenc:[1008,1040],from:[40,41,42,43,862,875,877,878,881,882,889,890,891,934,943,944,978,984,990,1008,1031,1042,1043,1051,1076,1087,1095,1102,1105,1108,1112,1121,1125,1128,1133,1154,1155,1156,1157,1158,1202,1204,1211,1214,1215,1216,1217,1218,1221,1226,1228,1239,1247,1250,1258,1264,1265,1275,1283,1286,1291,1295,1300,1301],from_cal:[1287,1288],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,135,301,449,582,715,858,859,1008,1128,1133,1258],full_matric:[877,879],fulli:[43,1258,1275,1285,1286,1300],func:[40,41,449,454,482,483,932,933,934,978,1008,1019,1105,1109,1158],further:[43,1304],furthermor:1304,futur:1304,gain:1266,gamma:[1256,1257],gather:[40,41,135,301,449,582,715,1008,1043],gather_nd:[40,41,135,301,449,582,715,1008],gauss:[1138,1147],gaussian:[1231,1232],geglu:[1258,1261],gelu:[383,509,832,1231,1258,1261],gener:[23,40,41,43,447,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,498,932,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1111,1214,1216,1218,1219,1258,1291,1295],geometr:[1008,1040],get:[40,41,43,858,859,860,934,943,944,952,967,968,973,977,980,983,984,994,995,1008,1012,1044,1045,1046,1074,1158,1258,1275,1284,1304],get_all_arrays_in_memori:1008,get_all_arrays_on_dev:934,get_framework:59,get_initial_st:[1275,1284],get_min_bas:1008,get_min_denomin:1008,get_mod_kei:[1287,1288],get_num_dim:[449,715,1008],get_referrers_recurs:1008,getfullargspec:1158,gist:1258,give:[43,1008,1076,1301],given:[40,41,43,881,882,934,967,973,976,977,978,980,983,984,988,1008,1011,1014,1020,1028,1029,1043,1061,1062,1071,1072,1075,1078,1079,1086,1093,1098,1100,1104,1105,1107,1108,1110,1112,1113,1114,1128,1130,1134,1138,1139,1158,1202,1207,1208,1214,1217,1218,1220,1221,1224,1226,1227,1228,1229,1239,1240,1241,1242,1243,1244,1245,1246,1264,1265,1304],global:[40,41,42,934,943,944,951,976,977,978,984,991,992,993,1008,1030,1045,1046,1074,1080,1081,1082,1088,1089,1105,1120,1158,1256,1257,1289,1290],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1258,1266,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285],good:43,googl:1258,got:[43,1258],gpu0:43,gpu2:43,gpu:[934,969,972,1158],gpu_is_avail:[447,934,1158],grad:[1258,1291,1295,1300],gradient:[25,40,41,483,484,485,486,934,978,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1124,1154,1155,1156,1157,1258,1291,1292,1293,1294,1295,1296,1300,1304],gradient_descent_upd:[1105,1154,1155,1156,1157],gradient_imag:[170,355,487,623,787,1121],gradienttrack:[1105,1106],graph:[1105,1108,1110,1112,1113,1114,1287,1288],greater:[40,41,1008,1011,1038,1087,1214,1218],greater_equ:[86,221,405,532,664,1008],green:[40,41,42,1302,1303],grid:[1008,1066],group:[1121,1126],guid:[43,1258,1259,1304],gym:1258,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1304,half:[1008,1011,1158,1214,1218],hand:1258,handl:[40,41,42,43,932,933,934,950,952,961,962,973,980,983,1105,1108,1110,1112,1113,1114,1158,1291,1292,1293,1294,1295,1296],happen:43,has:[40,41,43,883,884,1008,1090,1128,1133,1138,1142],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1008],hasattr:1158,have:[40,41,43,854,855,856,857,858,859,862,863,864,865,866,867,868,869,870,871,873,874,875,877,878,879,880,881,882,883,884,886,887,889,890,891,893,911,912,918,1008,1023,1027,1032,1033,1034,1035,1041,1049,1090,1105,1111,1119,1138,1146,1158,1258,1300,1301],haven:43,hdf5:[40,41,1287,1288],head:[1239,1250,1275,1286],head_dim:[1275,1286],height:[1121,1126],height_cutoff:[40,41],help:[43,59,400,447,448,934,946,947,948,949,984,1105,1258,1266,1268,1269,1271,1272,1274],here:[43,1258],hidden:[1239,1249,1275,1284],hierarch:[1008,1025],hierarchi:[40,41],high:[40,41,498,1214,1216,1218],higher:[877,879,1105,1108,1110,1112,1113,1114],highest:[1214,1216],highest_util:1158,highest_util_nod:1158,highli:1258,highlight:1304,hint:43,hkt:1304,hold:[984,988,1008,1011,1014,1078,1079],host:1258,hot:[1008,1070],hour:43,how:[1258,1275,1286,1287,1288,1301,1304],howev:[43,1301],http:1304,hyperbol:[862,863,867,1138,1140,1144,1145,1151,1153,1231,1238],hypothet:[43,1304],icon:1258,idea:1258,ident:[40,41,43,135,301,449,582,715,1008],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[853,858,859,862,875],if_exist:[40,41],ignor:[40,41,1291,1295],ignore_key_error:[40,41],ignore_miss:[1291,1295],ignore_non:[40,41],iii:43,iinfo:[81,216,400,527,659,858],imag:[27,488,489,490,1008,1060,1122,1123,1124,1125,1126,1127,1239,1240,1241,1242,1243,1245,1246,1258,1304],image_dim:[1121,1125],imkkhk:1304,immedi:[1258,1301,1304],implement:[43,862,863,866,867,872,873,886,887,893,918,1258,1301,1304],in_featur:[1239,1248],inadvert:43,includ:[40,41,43,877,880,889,890,891,1008,1011,1050,1088,1089,1101,1202,1203,1214,1218,1275,1285,1286,1289,1290,1300],include_deriv:[1202,1204,1211],include_empti:[40,41],include_inf:[40,41,1008,1050,1101],include_nest:[1202,1203],include_self:[40,41],inclus:[43,1214,1216],incom:[1239,1248],increas:[934,956,960,966,1008,1024,1037,1103,1158,1202,1211],increasingli:1304,increment:[1008,1055,1158],inde:1258,indent:[40,41,42],independ:[1214,1215],index:[40,41,449,498,883,884,886,887,1008,1013,1042,1043,1066,1087,1090,1202,1205,1207,1208,1209,1212],index_nest:1202,indic:[40,41,449,462,463,473,475,476,877,880,883,884,886,887,1008,1013,1042,1043,1052,1070,1078,1079,1202,1203,1205,1207,1208,1209,1210,1212,1213,1214,1215,1231,1236,1239,1240,1241,1242,1243,1244,1245,1246,1256,1257,1275,1276,1277,1278,1279,1280,1281,1282,1287,1288],indices_wher:[135,301,449,715,1008],indistinguish:[862,875],inevit:1304,inf:[40,41,877,880,1008,1050,1059,1101,1138,1142],infer:[932,933,1008,1047,1051,1076,1084,1121,1125,1128,1133,1301,1304],infin:[862,863,865,866,867,868,873,875,877,880,889,890,891,1008,1059],infinit:[862,875],inform:[858,859,860,1105,1116],init_c:[1239,1249],init_h:[1239,1249],init_on_first_step:[1291,1295],initi:[40,41,42,43,59,400,447,448,934,946,947,948,949,984,1105,1158,1239,1249,1258,1268,1269,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1291,1295],initialz:[1287,1288],inner:[1154,1155,1156,1157],inner_batch_fn:[1154,1155,1156],inner_batch_shap:[1239,1248],inner_cost_fn:[1154,1155,1156],inner_grad_step:[1154,1155,1156,1157],inner_learning_r:[1154,1155,1156,1157],inner_optimization_step:[1154,1155,1156,1157],inner_v:[1154,1155,1156],innermost:[854,856,877,878],inp:1158,inplac:[40,41,1008,1017,1053,1057,1091,1105,1108,1110,1112,1113,1114,1264,1265,1291,1292,1293,1294,1295,1296],inplace_arrays_support:[449,1008],inplace_decr:[135,301,449,582,715,1008],inplace_incr:[135,301,449,582,715,1008],inplace_oper:[0,11,12],inplace_upd:[40,41,135,301,449,582,715,1008,1264,1265],inplace_variables_support:[449,1008],input:[15,18,19,40,41,42,43,854,856,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,883,884,886,887,889,890,891,932,933,934,943,944,951,952,953,956,957,960,966,978,979,984,988,989,991,992,993,994,995,999,1000,1008,1009,1010,1013,1015,1016,1017,1018,1020,1021,1022,1023,1024,1026,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1047,1049,1050,1051,1052,1054,1055,1056,1058,1059,1060,1064,1065,1066,1067,1075,1077,1084,1085,1087,1090,1091,1092,1093,1095,1096,1097,1098,1100,1101,1103,1105,1109,1111,1116,1120,1121,1122,1123,1124,1125,1127,1128,1131,1133,1135,1136,1137,1138,1140,1142,1144,1145,1146,1150,1151,1152,1153,1154,1155,1156,1157,1158,1214,1215,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1256,1257,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1289,1290,1301],input_ax:[934,978,1158],input_channel:[1275,1276,1277,1278,1279,1280,1281,1284,1285],input_queu:1158,inputs_split:1158,insert:[883,884,1008,1037],insid:43,inspect:1158,inspir:1304,instal:1258,instanc:[15,16,17,18,19,40,41,43,498,893,911,912,918,934,943,1158,1264,1265,1297,1298],instead:[40,41,43,498,1221,1223,1224,1225,1226,1227,1228,1229,1304],int32:43,int64:[984,988,1008,1011,1014,1051,1071,1072,1104],int_dtyp:[984,993,1003],integ:[40,41,498,858,860,862,864,865,877,880,889,890,891,984,1000,1008,1011,1038,1077,1086,1214,1216,1219],integr:1258,intend:43,inter:1258,interact:1258,interchang:[40,41,1008,1092],interest:1258,interfac:[1008,1014,1301],intermedi:[40,41],intern:[40,41,934,1105,1119,1158,1202,1203,1210,1211,1266,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1297,1298],interpol:[1008,1060],intersect:[1138,1139],interv:[40,41,889,890,891,1008,1011,1020,1061,1062,1138,1141,1214,1218],introduc:1304,inv:[791,1128,1304],invalid:[889,890,891],invalid_dtyp:984,invers:[862,863,1128,1130,1132,1138,1139,1140,1141,1142,1144,1304],invert:[1128,1130,1132],invest:1304,investig:43,invoc:[932,933],irrespect:1258,is_al:1158,is_arrai:[135,301,449,582,715,1008,1158],is_float_dtyp:984,is_int_dtyp:984,is_mean:1158,is_sum:1158,is_vari:[167,350,482,618,781,1105],isfinit:[86,221,405,532,664,862],isinf:[301,582,715,1008],isinst:1158,isnan:[86,221,405,532,664,862],isnumer:1158,issu:[1258,1259],issue_numb:43,item:[15,19,40,41,893,905,906,934,943,944,946,953,955,957,959,965,984,991,1008,1025,1048,1088,1089,1158,1202,1206,1207,1208,1211,1212,1213,1258,1287,1288,1300],iter:[15,16,17,18,19,40,41,42,932,933,934,937,938,940,941,943,944,947,948,955,957,958,959,960,965,978,1008,1010,1018,1023,1024,1051,1066,1071,1075,1076,1079,1084,1086,1090,1093,1098,1103,1158,1202,1203,1204,1206,1210,1211],iterbal:[934,955,959,965,1158],its:[498,934,978,1008,1051,1076,1092,1098,1158,1258],itself:[43,1202,1211],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,396,397,398,399,400,402,403,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,853,854,855,856,857,858,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,883,884,886,887,889,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,936,937,938,939,940,941,943,944,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1268,1269,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1302,1303],ivy_backend:[40,41],ivy_bay:1304,ivy_test:43,ivyfcmodel:1300,ivyh:[40,41,42],ivymodul:[198,840],jame:1258,jax:[43,1105,1111,1258,1304],jax_concat:1258,jnp:1258,join:[40,41,1008,1023,1090,1158],journal:1258,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1258,1275,1284,1304],kaimingnorm:[1266,1270],kalman:1304,kalman_filt:1304,kalman_filter_step:1304,kalman_filter_upd:1304,keep:[40,41,934,979,1008,1100,1158,1258,1259,1304],keep_inner_v:[1154,1155,1156],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1154,1155,1156],keepdim:[40,41,449,480,491,492,877,880,883,884,889,890,891,1008,1100,1128,1131,1221,1223,1224,1225,1226,1227,1228,1229],kei:[15,16,17,40,41,42,43,893,898,934,946,1008,1025,1154,1155,1156,1158,1202,1205,1209,1239,1250,1251,1258,1264,1265,1275,1286,1291,1295],kept:[40,41,42,1154,1155,1156],kera:1304,kernel:[1239,1249],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,934,943,944,956,960,966,1008,1012,1032,1033,1034,1063,1158,1202,1206,1287,1288],keyword_color_dict:[40,41,42],kind:[858,859,860,1304],kwarg:[15,16,17,40,41,42,59,63,934,943,956,960,966,1008,1063,1158,1264,1265,1287,1288],kwarg_stateful_idx:[1287,1288],kwargs_clon:1158,kwargs_dist:1158,kwargs_uni:1158,label:[43,1252,1253,1254,1255],lamb:[1105,1112,1258,1291],lamb_upd:1105,lambda:[1158,1291,1294,1296,1300],lar:[1105,1112,1113,1258,1291],larger:[858,859,1008,1020],largest:[40,41,858,859,860,1008,1038],lars_upd:1105,last:[40,41,877,878,879,881,882,886,887,889,890,891,1008,1011,1027,1060,1086,1090,1128,1131,1221,1226,1228,1231,1236,1239,1249,1275,1285],later:[40,41,1008,1019],latest:[1275,1284],layer:[1105,1108,1110,1112,1114,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1256,1257,1258,1266,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1297,1298,1304],layer_norm:1256,layernorm:[1258,1289],layerwis:[1105,1113,1291,1294],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1202,1203,1210],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1231,1232,1233],leaky_relu:[832,1231],learn:[1105,1108,1110,1112,1113,1114,1128,1133,1154,1155,1156,1157,1214,1220,1258,1291,1292,1293,1294,1295,1296,1301,1304],learnabl:[1256,1257,1289,1290],least:43,leav:[15,18,19,40,41,1202,1203,1204,1210,1211],left:[40,41,43,883,884,1128,1131,1221,1223,1224,1225,1226,1227,1228,1229,1258],leftmost:[40,41],len:1158,length:[40,41,42,1008,1011,1076,1087,1098],lenton2021ivi:1258,lenton:1258,less:[40,41,43,86,221,405,532,664,862,865,873,875,877,880,1158,1214,1218],less_equ:[86,405,532,664,862],less_util_node_str:1158,let:[1301,1304],level:1258,librari:[862,874,1258,1300,1304],lightweight:1258,like:[43,1105,1111,1214,1218,1258,1300,1301,1304],likewis:43,limit:[40,41,42,43,858,859,860,1008,1020,1021,1022],linalg:[29,1129,1130,1131,1132,1133,1134,1258],line:43,linear0:[1258,1300],linear1:1258,linear2:1300,linear:[1008,1040,1060,1128,1231,1232,1233,1234,1239,1247,1258,1275,1276,1277,1278,1279,1280,1281,1282,1300],linear_algebra:[491,492,493,494,877,878,879,880],linear_resampl:[135,301,449,582,715,1008],linearli:[1008,1040],link:[43,1258],linspac:[135,301,449,582,715,1008,1011],list:[15,18,19,40,41,396,397,399,854,855,857,881,882,889,890,891,934,943,944,953,954,956,957,958,960,963,964,978,1008,1011,1014,1016,1066,1085,1086,1095,1100,1154,1155,1156,1158,1202,1203,1204,1206,1210,1211,1239,1240,1241,1242,1243,1244,1245,1246,1258,1259,1264,1265,1275,1276,1277,1278,1279,1280,1281,1282],list_join:[40,41,42],list_stack:[40,41],liter:[877,880],littl:1301,load:[40,41],loaded_kwarg:1158,loader:1258,local:43,local_set:[1008,1048],locat:[43,1008,1059,1214,1215],log1p:[86,405,532,664,862],log2:[86,405,532,664,862],log:[801,862,872,1008,1062,1138,1158,1252,1253,1254,1255],logarithm:[862,872,873,1138,1149],logic:[31,862,874,889,890,891,1136,1137,1258],logical_and:[364,798,1135],logical_not:[86,221,405,532,664,862],logical_or:[364,798,1135],logit:[1252,1255],logspac:[135,301,449,582,715,1008],look:[43,1301,1304],loop:[1154,1155,1156,1157],loss:[1253,1254,1255,1258,1300],loss_fn:[1258,1300],lot:1301,low:[40,41,498,1214,1216,1218],lower:[40,41,43,854,856,1008,1065,1214,1218],lower_depth:[1287,1288],lowest:[15,18,19,40,41,1202,1211,1214,1216],lstm:[1239,1249,1258,1275],lstm_updat:[43,1239],machin:[858,859,860,1128,1133,1214,1220,1258,1301,1304],made:43,mai:[862,871,874,886,887,1008,1011,1031,1035,1049,1258,1301,1304],main:[854,856,877,878,1008,1051,1258],mainli:1258,maintain:[43,886,887],make:[43,498,934,1158,1258,1301],maml:[1154,1155,1156],maml_step:1154,manag:[934,1158],manhattan:[877,880],mani:[40,41,43,1008,1086,1258],manipulation_funct:[881,882],manner:[15,18,19,40,41,43,1202,1211],manual:[1202,1203,1210,1304],map:[40,41,42,934,943,1008,1059,1158,1202,1207,1208,1211,1275,1286,1300],map_cont:[40,41],map_nest_at_index:1202,map_nest_at_indic:1202,map_sequ:[40,41],mapper:[934,943,944,1158],mark:43,mask:[1239,1250,1251],master:43,match:[40,41,1008,1063],match_kwarg:1008,math:[33,497,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1158,1258],mathbb:[1128,1134],mathbf:[1128,1134],mathemat:[853,877,880],matmul:[43,301,449,582,715,1008,1304],matplotlib:1301,matric:[854,856,877,878,1239,1248],matrix:[40,41,854,856,877,878,1008,1010,1021,1064,1128,1129,1130,1131,1132,1133,1134,1239,1248,1275,1285],matrix_norm:[40,41,174,359,491,627,791,1128],matter:1258,max:[40,41,400,858,859,860,1008,1021,1022,1033,1065,1078,1079,1158,1221,1223,1291,1293],max_batch_s:[40,41],max_chunk_s:[934,978,1158],max_depth:[40,41,934,938,941,948,956,960,966,1008,1048,1158,1202,1211],max_dev_dim_step_ratio:934,max_freq:[1008,1040],max_length:[40,41],max_node_dim_step_ratio:1158,max_norm:[40,41,1008,1021,1022],max_split_factor_step_s:[934,1158],max_trust_ratio:[1105,1112,1291,1293],maxim:[1258,1301,1304],maximis:1258,maximum:[40,41,42,715,883,884,934,956,960,966,978,1008,1020,1021,1022,1040,1105,1112,1158,1202,1211,1221,1223],mayb:[15,18,19],mdi:1158,mean:[40,41,498,934,963,964,965,966,978,1008,1033,1154,1155,1156,1157,1158,1202,1206,1214,1217,1221,1224,1227,1229,1266,1300,1304],measur:[1239,1250,1275,1286],mech:1258,mechan:[1258,1304],medic:1304,member:43,memori:[934,950,973,978,980,983,1158,1239,1249,1258],mention:43,merg:43,merge_with_upstream:43,meshgrid:[301,449,715,1008],messag:[1302,1303],meta:[35,1155,1156,1157,1258],method:[40,41,42,43,498,1008,1014,1025,1066,1078,1079,1105,1112,1113,1158,1202,1203,1210,1211,1258,1275,1286,1287,1288,1301],might:[1008,1031,1304],min:[40,41,400,858,859,860,877,880,1008,1033,1067,1078,1079,1088,1128,1133,1158,1221,1225],min_bas:[1008,1089],min_denomin:[1008,1088],min_dev_dim_s:934,min_node_dim_s:1158,min_sf_tune_step:[934,1158],min_unit_dev_tune_step:934,min_unit_node_tune_step:1158,mind:1258,mini:[1256,1257,1289,1290],minimum:[40,41,715,934,984,988,1008,1011,1013,1014,1020,1045,1046,1080,1081,1088,1089,1158,1221,1225],miss:[1291,1295],ml_framework:[1008,1011,1128,1133],mod:[1008,1039],mod_depth:[1287,1288],mod_height:[1287,1288],mod_with_top_mod_key_chain:[1287,1288],mode:[40,41,491,493,877,879,932,933,934,963,964,965,966,978,1128,1133,1158,1301],model:[1258,1300],modul:[40,41,42,59,1008,1068,1158,1258,1259,1261,1262,1263,1264,1265,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1289,1290,1297,1298,1304],moment:[1105,1107,1108,1112,1291,1292,1293],more:[43,881,882,1008,1090,1158,1258,1301,1304],more_util_node_str:1158,most:[40,41,43,1128,1133,1258,1304],move:[40,41,43,934,979,1158],much:[43,1258,1304],multi:[498,1008,1068,1239,1250,1275,1286],multi_head_attent:1239,multi_index_nest:1202,multi_map:[40,41],multi_nod:1158,multidev:[934,945,946,947,966],multidevcontain:[40,41],multidevic:[934,943],multidevit:[934,937,940,943,944,948],multidevitem:[934,936,939],multidevnest:[934,938,941],multiheadattent:[1258,1275],multinod:[1158,1162],multinodecontain:1158,multinodeit:1158,multinodeitem:1158,multinodenest:1158,multinomi:[180,368,498,633,816,1214],multipl:[40,41,889,890,891,1008,1063,1086,1128,1130,1221,1223,1224,1225,1226,1227,1229,1256,1257,1275,1285,1301],multipli:[40,41,1008,1028,1221,1226],multiprocess:[40,41,42,449,715,934,943,1008,1158],must:[40,41,42,43,854,855,856,857,862,863,864,865,866,867,868,870,871,873,874,875,877,878,880,881,882,886,887,889,890,891,893,911,912,918,934,963,964,965,966,978,1008,1011,1023,1025,1027,1035,1049,1065,1067,1079,1090,1138,1143,1146,1158,1214,1219,1291,1295],mutabl:[1202,1204,1211],mutlidevic:[934,943],mutlinod:1158,mw_tm1:[1105,1108,1112],mx_concat:1258,mxn:[854,856,877,878],mxnet:[43,1258,1304],my_func:43,mymodel:1258,name:[43,932,933,1300],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1301],nan:[40,41,43,853,862,863,865,866,867,868,869,873,875,889,890,891,1008,1050,1101],nativ:[15,17,18,19,40,41,43,934,950,952,961,962,973,980,983,984,989,996,997,1158,1258,1259,1264,1265],native_modul:[1264,1265],native_module_class:[1264,1265],nativearrai:[15,18,19,43,854,856,858,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,879,880,881,882,883,884,886,887,889,890,891,893,911,912,918,934,952,978,979,984,988,994,999,1000,1008,1009,1010,1011,1013,1014,1015,1016,1018,1020,1021,1022,1023,1024,1026,1027,1028,1029,1032,1033,1034,1035,1037,1038,1039,1040,1042,1043,1047,1049,1050,1051,1052,1059,1060,1061,1062,1064,1065,1066,1067,1070,1071,1072,1075,1076,1077,1078,1079,1084,1086,1087,1090,1092,1093,1095,1096,1097,1098,1100,1101,1102,1103,1104,1158,1202,1204,1211],natur:[862,872,1138,1149,1304],ncdhw:[1239,1244,1245,1275,1280,1281],nchw:[1239,1242,1243,1246,1275,1278,1279,1282],ncw:[1239,1240,1241,1275,1276,1277],ndarrai:[43,396,397,398,399,400,402,403,498,1008,1096],ndhwc:[1239,1244,1245,1275,1280,1281],nearest:[1008,1077],need:[43,1008,1021,1022,1239,1241,1243,1245,1258,1275,1277,1279,1281,1304],neg:[40,41,862,868,877,880,881,882,889,890,891,1221,1226,1228,1231,1233],negative_slop:1266,neither:1158,nest:[15,16,17,18,19,40,41,42,934,956,960,966,1008,1014,1095,1154,1155,1156,1158,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1287,1288,1291,1292,1293,1294,1295,1296],nested_indices_wher:1202,nested_map:[1158,1202],network:[1239,1248,1258,1259,1261,1275,1287,1288,1304],neural:[1239,1258,1261,1275,1300],never:43,new_node_percent_mem:1158,new_node_util:1158,new_node_utils_kei:1158,new_std:[1256,1257,1289,1290],newli:[43,932,933,1008,1018,1019],newlin:[40,41,42],newshap:[1008,1018,1076],next:[858,859,1158,1287,1288,1291,1292,1293,1294,1295,1296],nhwc:[1239,1242,1243,1246,1275,1278,1279,1282],node:[40,41,1202,1203,1210],node_clon:1158,node_dist:1158,node_dist_arrai:1158,node_dist_it:1158,node_in:1158,node_mapp:1158,node_str:1158,node_to_str:1158,node_util:1158,nodedistit:1158,nodedistitem:1158,nodedistnest:1158,nodemanag:[1158,1169],nodemapp:1158,nodemappermultiproc:1158,noinspect:[43,935,985,986,987,1106,1158],non:[40,41,862,874,877,880,889,890,891,932,933,984,998,1287,1288,1291,1295,1301],none:[40,41,42,43,59,61,64,396,397,399,447,449,450,452,454,461,462,463,464,471,472,473,474,475,476,477,478,479,481,491,492,498,499,854,855,857,858,859,860,877,880,881,882,883,884,889,890,891,932,933,934,943,944,950,951,976,977,978,979,984,991,992,993,1008,1011,1014,1030,1031,1036,1041,1042,1043,1048,1051,1053,1054,1055,1056,1057,1061,1062,1068,1070,1071,1072,1075,1078,1079,1080,1081,1086,1087,1088,1089,1098,1099,1104,1105,1108,1110,1112,1113,1114,1120,1121,1125,1128,1131,1133,1154,1155,1156,1157,1158,1202,1203,1206,1210,1211,1214,1215,1216,1217,1218,1221,1223,1224,1225,1226,1227,1228,1229,1239,1241,1243,1245,1248,1249,1250,1251,1256,1257,1264,1265,1266,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298],norm:[40,41,877,880,1008,1021,1022,1128,1131,1257,1258,1290,1291,1293],normal:[1214,1217,1256,1257,1289,1290],normalized_idx:[1256,1257],normalized_shap:[1289,1290],notat:[40,41,1221,1222],note:[43,1128,1133],noth:[40,41,1301],notimplementederror:1158,now:[40,41,43,934,979,1008,1009,1158,1258,1275,1286,1287,1288,1300,1301,1304],np_concat:1258,np_finfo:400,ns_tune_step:1158,num:[449,471,472,1008,1061,1062],num_arrai:[40,41],num_arrays_in_memori:1008,num_arrays_on_dev:934,num_band:[1008,1040],num_channel:[1275,1282],num_chunk:1158,num_chunks_floor:1158,num_class:[1214,1215],num_cpu_cor:934,num_gpu:[128,447,934,1158],num_head:[1239,1250,1275,1286],num_kei:[1239,1250,1251],num_lay:[1275,1284],num_or_size_split:[40,41,449,477,1008,1086],num_output:1158,num_queri:[1239,1250,1251],num_sampl:[449,470,498,499,1008,1060,1121,1122,1214,1215],num_task:[1154,1155,1156,1157],number:[40,41,42,853,858,859,860,862,865,877,879,889,890,891,932,933,934,970,971,972,984,995,999,1000,1008,1011,1020,1024,1037,1040,1047,1051,1060,1061,1062,1065,1069,1075,1086,1093,1097,1101,1103,1154,1155,1156,1157,1158,1214,1215,1219,1221,1223,1224,1225,1227,1229,1239,1250,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1301,1304],numer:[43,862,865,868,869,870,874,893,912,918,1008,1045,1046,1080,1081,1088,1089,1138,1146,1266],numhead:[1239,1250],numpi:[40,41,43,396,397,398,399,400,402,403,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,877,879,1008,1096,1128,1133,1221,1222,1258,1300,1301,1304],nwc:[1239,1240,1241,1275,1276,1277],obj:[40,41],object:[40,41,42,59,400,858,859,934,984,988,1008,1011,1014,1105,1202,1205,1207,1208,1209,1212,1213,1214,1220,1266,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1287,1288],object_in:[449,452,1008,1014],observ:1158,obvious:43,occupi:[858,859,860,1008,1078,1079],off:[877,878,1008,1011],offer:1258,offset:[877,878,1256,1257],often:1301,old:[40,41],on_init:[1275,1286,1287,1288],onc:[43,934,978,1158,1214,1215,1258],one:[40,41,43,877,880,881,882,883,884,934,963,964,965,966,978,984,990,1008,1051,1063,1070,1078,1079,1087,1090,1128,1131,1158,1221,1222,1223,1224,1225,1226,1227,1228,1229,1258,1301,1304],one_hot:[135,449,582,715,1008],onearrai:[1008,1037],ones:[40,41,77,212,396,523,655,854,1008,1051,1070,1072,1258],ones_lik:[135,301,449,582,715,1008],ongo:43,onli:[40,41,43,498,862,874,881,882,934,1128,1133,1158,1202,1203,1204,1210,1291,1292,1293,1294,1295,1296,1300,1301],onlin:[43,1258],onto:[934,963,964,979,1158,1202,1206,1211],oom:[934,1158],open:[1008,1011,1214,1218,1258,1304],opencv:1301,oper:[40,41,1008,1017,1032,1033,1034,1061,1062,1091,1105,1108,1110,1112,1113,1114,1135,1136,1137,1239,1240,1241,1242,1243,1244,1245,1246,1248,1258,1259],operand:[40,41,862,863,865,866,867,873,875,1221,1222],oppos:[1008,1040],optim:[934,1105,1108,1110,1112,1113,1114,1154,1155,1156,1157,1158,1258,1292,1293,1294,1296,1300,1304],optimizer_upd:1105,option:[15,18,19,40,41,42,43,396,397,399,854,855,857,877,880,881,882,883,884,889,890,891,932,933,934,943,944,952,956,957,958,959,960,963,964,965,966,973,976,977,978,979,983,984,989,994,998,1007,1008,1010,1011,1013,1014,1021,1022,1023,1028,1030,1031,1040,1041,1042,1043,1047,1050,1051,1058,1060,1061,1062,1063,1066,1068,1070,1071,1072,1075,1078,1079,1082,1084,1086,1087,1088,1089,1090,1098,1100,1101,1104,1105,1108,1110,1111,1112,1113,1114,1116,1121,1125,1128,1131,1133,1154,1155,1156,1157,1158,1202,1203,1204,1206,1210,1211,1214,1215,1221,1223,1224,1225,1226,1227,1228,1229,1231,1232,1236,1239,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1264,1265,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1301],ord:[877,879,880],order:[40,41,42,43,877,880,881,882,886,887,1105,1108,1110,1112,1113,1114,1128,1131,1154,1155,1156,1297,1298],ordered_node_util_kei:1158,org:1304,organ:43,origin:[40,41,42,1008,1072,1076,1104,1128,1131],other:[40,41,43,893,895,896,901,903,904,908,910,911,912,913,914,916,918,919,920,921,922,923,925,926,927,929,930,931,932,933,1008,1010,1011,1051,1105,1109,1214,1218,1258,1300,1301,1304],other_i:[43,893,912,918],otherwis:[15,16,17,18,19,40,41,862,868,869,877,880,883,884,889,890,891,934,951,984,991,992,993,1008,1017,1098,1099,1102,1105,1111,1116,1120,1154,1155,1156,1158,1221,1223,1224,1225,1227,1229],our:[43,1258,1304],out:[43,498,854,855,856,857,858,859,860,862,863,864,865,866,867,868,869,870,872,873,874,875,877,878,880,881,882,883,884,886,887,889,890,891,893,912,1008,1011,1138,1142,1239,1247,1249,1258,1275,1283],out_feat_dim:[1239,1250],out_featur:[1239,1247,1248],out_i:[862,868,869],outdat:1304,outer:[1154,1155,1156,1157],outer_batch_fn:[1154,1155,1156],outer_batch_shap:[1239,1248],outer_cost_fn:[1154,1155,1156],outer_v:[1154,1155,1156],outlin:1301,output:[40,41,43,854,855,857,881,882,934,943,944,978,1008,1011,1019,1041,1051,1075,1093,1105,1109,1138,1143,1158,1214,1216,1217,1218,1239,1241,1243,1245,1247,1249,1250,1251,1258,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286],output_ax:[934,978,1158],output_axi:1158,output_channel:[1275,1276,1277,1278,1279,1280,1281,1284,1285],output_queu:1158,output_shap:[1239,1241,1243,1245,1275,1277,1279,1281],outsid:[1008,1020],over:[40,41,877,880,889,890,891,1128,1131,1214,1218,1221,1223,1224,1225,1227,1229,1256,1257,1289,1290],overal:1301,overflow:[1008,1011],overhead:1301,overrid:[1008,1070,1072,1104],overriden:[1291,1295],overwrit:[40,41,934,978,1158],overwrite_at_key_chain:[40,41],own:[1258,1301,1304],packag:[43,1301],pad:[1008,1024,1040,1103,1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282],pad_width:[449,1008,1024,1103],page:1258,pair:[1239,1251],parallel:[934,943,944,1158],parallelis:[934,943,944,1158],param:[40,41,42,449,462,463,883,884,934,978,1008,1009,1042,1043,1070,1071,1158,1287,1288,1300],paramet:[15,16,17,18,19,40,41,42,43,862,871,877,878,879,893,911,912,918,932,933,934,943,944,950,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,973,976,977,978,979,980,983,984,988,989,990,994,995,996,997,998,999,1000,1007,1008,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1047,1049,1050,1051,1052,1054,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1071,1072,1075,1076,1077,1078,1079,1080,1081,1082,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1116,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1264,1265,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1300],parameter:[1214,1217,1218],pardo:1258,pars:[1008,1025],part:[854,856,1105,1108,1110,1112,1113,1114,1138,1142,1258,1287,1288,1301],partial:[40,41,43,1287,1288],particl:1304,particular:[43,1304],pass:[40,41,42,43,934,943,978,984,989,1008,1019,1105,1119,1154,1155,1156,1158,1264,1265,1287,1288,1291,1295,1297,1298],pattern:[40,41,1008,1032,1033,1034],peopl:43,per:[934,1158,1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282],percent_used_mem_on_dev:934,percent_used_mem_on_nod:1158,percentag:[934,973,1158],perf_count:1158,perform:[40,41,43,889,890,891,934,1008,1013,1028,1032,1033,1034,1054,1055,1056,1060,1061,1062,1105,1108,1110,1112,1113,1114,1121,1122,1154,1155,1156,1157,1158,1202,1207,1208,1221,1223,1224,1225,1226,1227,1228,1229,1231,1236,1239,1247,1249],period:43,permissable_step:1158,permit:43,permut:[498,1008,1092,1098],perpendicular:[1008,1027],person:[43,1258],physci:1304,pickl:[40,41,1158],pickle_filepath:[40,41],pinv:[359,791,1128],pip:1258,pipelin:1300,pkk:1304,pkkm1:1304,pkm1km1:1304,place:[40,41,43,854,855,857,934,979,1008,1037,1041,1054,1055,1056,1158,1291,1292,1293,1294,1295,1296],placehold:[43,1202,1211],pleas:[43,498,1128,1133],point:[43,853,854,855,857,858,859,862,863,865,866,867,873,875,877,880,984,999,1008,1011,1138,1146],popul:[40,41,1214,1215],popular:1304,population_s:[498,499,1214,1215],portabl:[1258,1259],posit:[15,16,17,858,859,862,868,889,890,891,934,956,960,966,1008,1009,1011,1037,1040,1158,1214,1219,1264,1265],possibi:[40,41],possibl:[43,1008,1063,1095,1121,1126,1304],post:[1256,1257],post_shap:[40,41],power:[43,893,918,924,1008,1045,1080,1089,1266],practic:1258,pre:[934,1158,1258],pre_shap:[40,41],precis:[858,859,862,875],pred:[1252,1253,1254,1255],predict:[1252,1253,1254,1255,1304],preprint:1258,present:[40,41],preserv:[40,41,42,881,882,1105,1116],preserve_typ:[40,41,482,485,1105,1116],press:1258,prevent:[43,1105,1107,1108,1112,1158,1291,1292,1293],prevet:43,previou:[1105,1108,1112],previous:[1008,1019],prime:1258,print:[40,41,42,934,974,1008,1073,1258,1300],print_all_arrays_in_memori:1008,print_all_arrays_on_dev:934,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1291,1295],prob:[498,499,1214,1215,1239,1247,1275,1283],probabl:[1214,1215,1239,1247,1275,1283],problem:[43,1304],process:[43,934,943,944,973,983,1008,1068,1158],process_specif:[934,973,983,1158],prod:[40,41,1008,1033],produc:[934,943,944,1158],product:[40,41,1008,1027,1028,1064,1221,1222,1239,1250,1251,1275,1286],profil:[128,295,447,575,707,934,1158],progress:43,project:[1258,1300,1301,1304],promot:[43,862,863,864,866,867,873,875,877,880,893,918,1138,1146],prompt:1258,properli:43,properti:[40,41,400,934,946,1158,1287,1288,1291,1292,1293,1294,1296],provid:[40,41,43,881,882,883,884,889,890,891,932,933,934,951,984,991,992,993,998,1007,1008,1031,1070,1072,1079,1104,1105,1108,1110,1112,1113,1114,1120,1158,1258,1275,1284,1291,1292,1293,1294,1295,1296,1301],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1128,1132],pull:[1258,1259],pure:[40,41,1258,1304],purpos:[43,1304],put:1158,pybroadexcept:1158,pyprotectedmemb:1158,pyshadowingbuiltin:43,pyshadowingnam:[935,985,986,987,1106,1158],python:[40,41,934,973,983,1008,1011,1158,1258],pytorch:[1105,1108,1110,1112,1113,1114,1128,1133,1258,1291,1292,1293,1294,1295,1296,1300,1301,1304],pyunresolvedrefer:1158,quadrant:[1138,1143],qualiti:43,queri:[40,41,893,907,928,934,967,977,1158,1239,1250,1251,1275,1286],query_dim:[1275,1286],query_kei:[40,41],queue:[40,41,42,934,943,944,1008,1074,1082,1158],queue_class:[934,943,944,1158],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1008,1158],quick:[498,1258],quickli:[43,1300],radian:[862,866,1138,1139,1141,1143,1150,1152],rai:[1138,1139],rais:[40,41,43,889,890,891,893,918,1008,1017,1045,1080,1087,1089,1099,1158,1287,1288,1291,1295],ram:[934,973,980,983,1158],randint:[180,368,498,633,816,1214],random:[37,40,41,499,1215,1216,1217,1218,1219,1220,1258],random_crop:1121,random_norm:[180,368,498,633,816,1214],random_uniform:[180,368,498,633,816,1214],randomli:[498,1121,1125,1239,1247,1275,1283],rang:[498,1008,1011,1061,1062,1138,1143,1158,1258,1300,1304],rank:[877,880,889,890,891,1008,1024,1100,1103],rate:[1105,1108,1110,1112,1113,1114,1154,1155,1156,1157,1275,1286,1291,1292,1293,1294,1295,1296],rather:[40,41,43,934,978,1008,1011,1058,1105,1111,1158],ratio:[934,1105,1112,1121,1126,1158,1291,1293],raw:[40,41,1128,1133],raw_delta:1158,reach:[43,934,956,960,966,1158,1202,1211],read:[40,41],readi:[1158,1300],real:[1138,1139,1142],realiti:1301,rearrang:[40,41,1008,1032,1034],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1154,1156],receiv:[43,934,943,944,1008,1012,1063,1158,1275,1285],receivess:[934,1158],receivng:[1154,1157],recev:[1154,1155,1156],recognit:1304,recommend:[862,874,1258],rectifi:[1231,1233,1234],recurr:[1239,1249],recurrent_bia:[1239,1249],recurrent_kernel:[1239,1249],recurs:[40,41,1202,1203,1204,1210,1211],redefin:43,reduc:[40,41,883,884,889,890,891,934,978,1008,1033,1128,1133,1158,1221,1223,1224,1225,1226,1227,1228,1229],reduce_max:[40,41,187,373,500,638,823,1221],reduce_mean:[40,41,187,373,500,638,823,1221,1258,1300],reduce_min:[40,41,187,373,500,638,823,1221],reduce_prod:[40,41,187,373,500,638,823,1221],reduce_std:[40,41,373,1221],reduce_sum:[40,41,187,373,500,638,823,1158,1221],reduce_var:[40,41,187,373,500,638,823,1221],reduct:[39,40,41,449,475,476,889,890,891,1008,1033,1078,1079,1222,1223,1224,1225,1226,1227,1228,1229,1258],refactor:43,refer:[43,862,872,889,890,891,1105,1107,1108,1128,1134,1275,1285,1304],reflect:43,reflected_oper:[0,13,14],regard:[934,1158],regardless:[40,41,932,933],register_paramet:1300,reimplement:1304,rel:[877,878,881,882,886,887,1105,1108,1110,1112,1113,1114],rel_slice_obj:1158,relat:43,relev:[1291,1292,1293,1294,1295,1296],relu:[832,1231,1232,1233,1258,1300],remain:[43,1008,1076,1202,1206],remaind:[40,41,1008,1039,1086],remov:[40,41,43,877,878,883,884,1008,1087,1154,1155,1156],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,881,882],rep:[1008,1093],repeat:[40,41,43,301,715,1008,1034,1093,1158,1301],repeated_config_check:[934,1158],repeatedli:[1202,1209],repetit:[40,41,1008,1075,1093],replac:[40,41,43,498,499,1008,1020,1078,1079,1214,1215],repo:[43,1258],repositori:43,repres:[43,862,863,867,984,990,995,1239,1248],represent:[40,41,42,43,853,858,859,860,862,864,934,961,962,984,990,996,997,1008,1085,1095,1158],reptil:[1154,1157],reptile_step:1154,request:[1258,1259],requir:[43,862,875,932,933,984,988,1008,1011,1014,1264,1265],resampl:[1008,1060],reserv:43,reshap:[40,41,43,498,715,1008],reshape_lik:[40,41],respect:[862,864,870,871,893,912,1008,1035,1049,1105,1107,1108,1109,1110,1112,1113,1114,1128,1133,1138,1146,1154,1155,1156,1157],respond:43,respons:[43,1158],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,880,883,884,889,890,891,893,911,912,918,934,943,1008,1011,1035,1049,1078,1079,1090,1128,1131,1135,1136,1137,1138,1146,1158,1221,1223,1224,1225,1226,1227,1228,1229,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1258],ret:1158,ret_dict:1158,ret_fn:[934,943,944,1158],retain:[1105,1109],retain_grad:[482,483,1105,1109],retreiv:1158,retrn:[1008,1085],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1154,1155,1156,1157],return_sequ:[1275,1284],return_st:[1275,1284],rev:[1008,1031],revers:[40,41,881,882,1008,1031,1098],review:43,right:[40,41,43],rk_e:1304,robot:1258,ronald:1258,root:[43,862,875],round:[301,449,715,862,865,875,1008,1011,1158],row:[1008,1051,1214,1215],rule:[43,893,918,1008,1011,1138,1146],run:[43,934,943,1105,1107,1108,1112,1154,1155,1156,1157,1158,1258,1259,1275,1286,1287,1288],safe:[934,943,1158],safety_factor:[934,1158],same:[15,16,17,40,41,43,854,856,862,865,877,878,879,881,882,883,884,886,887,934,943,944,978,979,984,988,1008,1009,1023,1038,1039,1042,1043,1070,1072,1077,1078,1079,1090,1104,1105,1111,1116,1138,1142,1154,1155,1156,1158,1221,1222,1239,1240,1241,1242,1243,1244,1245,1246,1258,1275,1276,1277,1278,1279,1280,1281,1282,1300,1304],same_arrai:[40,41],sampl:[1008,1060,1121,1122,1214,1215,1217,1218,1239,1247,1258,1275,1283],satisfi:[1008,1014,1128,1130,1134],save:[40,41,1008,1083,1094,1121,1123,1287,1288],save_dir:[447,448,934,949,1158],save_weight:[1287,1288],scalar:[877,880,1008,1020,1070,1097,1101],scale:[934,976,977,1105,1113,1158,1239,1247,1250,1251,1256,1257,1275,1283,1286,1291,1294],scaled_dot_product_attent:1239,scatter:[1008,1070,1078,1079],scatter_flat:[135,301,449,582,715,1008],scatter_nd:[135,301,449,582,715,1008],scene:[1105,1108,1110,1112,1113,1114],schemat:1258,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[883,884],second:[40,41,862,864,870,871,877,878,934,965,1008,1015,1027,1035,1049,1074,1082,1092,1105,1107,1108,1112,1154,1156,1158,1291,1292,1293],secondli:1304,sector:[862,863],see:[43,59,400,447,448,498,862,864,870,877,880,889,890,891,893,911,912,918,934,946,947,948,949,984,1008,1011,1061,1062,1105,1138,1146,1258,1266,1268,1269,1271,1272,1274],seed:[40,41,180,498,816,1214],seed_valu:[40,41,498,1214,1219],seem:1258,seen_set:[1008,1048],select:[1008,1014,1087,1301,1304],self:[40,41,43,59,400,447,448,893,912,918,934,946,947,948,949,984,1105,1158,1258,1266,1268,1269,1271,1272,1274,1291,1295,1300,1304],self_i:[893,912],sent:1158,seper:[43,1008,1040],seq:[40,41,42,1221,1222,1287,1288],sequenc:[15,16,17,40,41,42,43,498,932,933,934,943,944,953,954,955,956,957,958,959,960,963,964,978,984,988,1008,1011,1014,1016,1018,1023,1024,1051,1063,1066,1071,1075,1076,1079,1086,1090,1093,1098,1103,1105,1109,1121,1125,1126,1128,1131,1158,1202,1213,1214,1216,1218,1221,1223,1224,1225,1226,1227,1228,1229,1239,1240,1241,1242,1243,1244,1245,1246,1256,1257,1264,1265,1275,1276,1277,1278,1279,1280,1281,1282,1284,1287,1288,1289,1290,1291,1295,1297,1298],sequenti:1258,seri:43,set:[15,18,19,40,41,883,884,886,887,934,963,964,976,977,978,1008,1010,1030,1051,1080,1081,1082,1083,1105,1108,1110,1111,1112,1113,1114,1128,1131,1158,1202,1203,1210,1212,1213,1214,1215,1219,1221,1223,1224,1225,1226,1227,1228,1229,1258,1275,1284,1291,1292,1293,1294,1295,1296,1301,1304],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:934,set_default_dtyp:984,set_default_float_dtyp:984,set_default_int_dtyp:984,set_default_nod:1158,set_exception_debug_mod:44,set_framework:[40,41,43,59,1158,1258,1300,1301,1304],set_ivy_backend:[40,41],set_min_bas:1008,set_min_denomin:1008,set_nest_at_index:1202,set_nest_at_indic:1202,set_queue_timeout:1008,set_split_factor:[934,1158],set_stat:[1291,1292,1293,1294,1295,1296],set_tmp_dir:1008,set_with_grad:1105,setter:1158,sever:1304,sgd:[1258,1291],shape0:1158,shape:[40,41,43,396,397,399,449,461,476,498,715,854,855,856,857,877,878,881,882,883,884,886,887,934,946,984,988,1008,1009,1018,1023,1024,1037,1038,1039,1041,1043,1047,1051,1070,1071,1072,1075,1076,1077,1078,1079,1085,1087,1090,1103,1104,1121,1125,1128,1130,1133,1138,1142,1143,1158,1214,1216,1217,1218,1221,1222,1239,1241,1243,1245,1275,1277,1278,1279,1280,1281,1282,1289,1290],shape_slic:[40,41],shape_to_tupl:1008,share:[40,41,1258,1301],shift:1158,should:[40,41,42,43,498,854,856,862,863,864,865,866,867,868,869,870,873,874,875,877,878,880,883,884,893,911,912,918,932,933,934,1008,1018,1019,1025,1070,1076,1105,1108,1110,1112,1113,1114,1138,1146,1158,1221,1222,1258],show:[40,41,1258,1304],show_mod_in_top_mod:[1287,1288],show_structur:[1287,1288],show_sub_contain:[40,41],show_v:[1287,1288],show_v_in_top_v:[1287,1288],shown:[40,41],shp:1158,shuffl:[40,41,180,498,816,1214],shuffle_h5_fil:[40,41],side:43,sigmoid:[832,1231,1258,1300],signatur:[43,59,400,447,448,449,482,487,491,495,496,498,934,946,947,948,949,984,1105,1266,1268,1269,1271,1272,1274],signific:1304,similar:[43,1239,1250,1275,1286],similarli:[1128,1133],simpl:[43,1008,1036,1258,1301,1304],simpler:43,simplest:1301,simpli:[40,41,43,1258,1301,1304],simultan:1258,sin:[801,1008,1040,1138,1152,1301],sinco:1301,sine:[862,863,1138,1141,1150,1151],singl:[40,41,932,933,934,943,944,963,964,965,966,1008,1087,1097,1101,1121,1126,1158,1214,1217,1218,1221,1223,1224,1225,1226,1227,1228,1229,1258,1301,1304],singleton:[877,880,889,890,891],singular:[877,879],sinh:[801,1138],siren:[1258,1266],situat:43,size:[40,41,42,449,475,877,878,879,883,884,889,890,891,934,957,958,959,960,976,977,978,1008,1011,1018,1061,1062,1078,1086,1121,1125,1128,1131,1158,1214,1215,1217,1218,1221,1223,1224,1225,1226,1227,1228,1229,1275,1276,1277],size_ordered_arrai:[40,41],skew:[1128,1134],skinv:1304,skip:[40,41],slice:[40,41,1008,1042,1043,1158,1202,1209],slice_kei:[40,41],slice_obj:[40,41,1158],slice_via_kei:[40,41],slide:[1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282],slope:[1231,1233],small:[1252,1253,1254,1255,1256,1257,1258,1289,1290,1301],smaller:[1008,1020],smallest:[40,41,858,859,860,862,865,1008,1013],smallest_norm:[400,858,859],softmax:[196,509,832,1231,1239,1250,1251],softplu:[832,1231],solut:43,solv:1304,some:[40,41,43,1008,1011,1105,1107,1108,1110,1112,1113,1114,1119,1239,1247,1258,1275,1283,1301,1304],some_backend:43,some_namespac:43,someth:[43,1304],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,877,879,887,1158],sort_by_kei:[40,41],sorting_funct:[886,887],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,396,397,398,399,400,402,403,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,496,497,498,499,854,855,856,857,858,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,883,884,886,887,889,890,891,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,936,937,938,939,940,941,943,944,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1261,1262,1263,1264,1265,1266,1268,1269,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1302,1303,1304],space:[1008,1011,1040,1061,1062],spars:[1252,1255],sparse_cross_entropi:1252,spawn:[1008,1068],special:[43,862,863,865,866,867,873,875],specif:[40,41,43,862,874,934,976,1008,1025,1032,1033,1034,1068,1154,1155,1156,1157,1158,1214,1220,1258,1287,1288,1300,1301],specifc:[1214,1215],specifi:[40,41,43,854,855,856,857,877,878,880,881,882,883,884,886,887,889,890,891,934,953,954,955,956,957,958,959,960,963,964,968,970,974,977,978,979,984,988,990,1008,1011,1013,1014,1020,1023,1024,1041,1042,1043,1050,1061,1062,1090,1100,1103,1128,1131,1158,1202,1207,1208,1212,1213,1221,1222,1223,1224,1225,1226,1227,1228,1229],sphinx:43,split:[40,41,135,301,449,582,715,934,943,957,958,959,960,976,977,978,1008,1063,1158],split_arg:1158,split_factor:[934,943,1158],split_func_cal:[934,1158],split_siz:1158,spread:[934,966,1158],sqrt:[86,221,405,532,664,862,877,880],squar:[862,875,1008,1051,1128,1130],squeez:[135,301,449,582,715,1008],stabil:[886,887,1008,1088,1089],stabl:[886,887,1008,1045,1046,1080,1081,1088,1089],stable_divid:1008,stable_pow:1008,stack:[40,41,301,715,854,856,877,878,1008,1121,1126,1202,1203,1210,1275,1284],stack_imag:[170,355,487,623,787,1121],stacked_dim_s:1158,stage:43,standard:[40,41,858,859,1214,1217,1221,1227,1256,1257,1258,1259,1289,1290],start:[40,41,43,447,448,449,450,471,472,498,934,949,1008,1011,1061,1062,1158,1258,1301],starting_index:[40,41],starting_split_factor:[934,1158],state:[1158,1239,1249,1258,1261,1262,1263,1264,1265,1266,1268,1269,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1300],statement:1301,static_argnam:[449,454,932,933],static_argnum:[449,454,932,933],std:[498,1214,1217],step:[40,41,449,450,934,1008,1011,1061,1062,1105,1107,1108,1110,1112,1113,1114,1154,1155,1156,1157,1158,1258,1291,1292,1293,1294,1295,1296,1300,1304],stephen:1258,stick:1258,still:[40,41,43],stochast:[1291,1296],stop:[40,41,447,448,449,450,471,472,934,949,978,1008,1011,1061,1062,1105,1108,1110,1112,1113,1114,1116,1154,1155,1156,1157,1158,1291,1292,1293,1294,1295,1296],stop_gradi:[40,41,350,482,618,781,934,978,1105,1108,1110,1112,1113,1114,1154,1155,1156,1157,1158,1291,1292,1293,1294,1295,1296],stopiter:1158,store:[40,41,1008,1040,1086,1105,1119,1287,1288],store_var:[1287,1288],str:[15,16,17,40,41,42,43,396,397,399,400,402,403,858,859,860,932,933,934,943,944,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,978,984,989,990,995,996,997,998,999,1000,1007,1008,1014,1030,1032,1033,1034,1066,1068,1071,1078,1079,1128,1131,1133,1154,1155,1156,1157,1158,1202,1206,1221,1222,1264,1265,1275,1286,1287,1288],str_to_nod:1158,straight:1301,strength:[1258,1304],stride:[1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282],string:[40,41,43,934,950,952,961,962,967,973,979,980,983,984,988,994,996,997,998,1007,1008,1011,1014,1030,1051,1071,1072,1104,1158,1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282,1287,1288],structur:[40,41,42,43,1008,1025],structural_diff:[40,41],style:43,sub:[40,41,43,877,878,934,957,958,963,964,965,966,1008,1086,1154,1155,1156,1157,1158],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1158,sub_mod:[1287,1288],sub_modul:[1297,1298],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1258,1259,1289,1290,1297,1298],subsequ:43,subset:43,substr:[40,41],suffici:[1128,1133],suggest:1258,suitabl:[1121,1126],sum:[40,41,449,475,476,877,880,934,963,964,965,966,978,1008,1029,1033,1078,1079,1158,1221,1222,1228],summat:[40,41,1221,1222],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,110,113,116,117,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,175,176,177,181,182,183,184,185,186,188,189,190,191,192,193,194,197,199,200,202,203,204,205,206,207,208,213,214,215,217,218,219,222,223,224,225,226,227,228,229,232,233,234,236,238,241,244,245,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,356,357,358,360,361,362,363,365,366,369,370,371,372,374,375,376,377,378,379,380,381,384,386,387,388,389,390,391,392,397,398,399,401,402,403,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,423,424,425,427,429,432,435,436,448,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,488,489,490,492,493,494,497,499,501,502,503,504,505,506,507,510,511,513,514,515,516,517,518,519,524,525,526,528,529,530,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,550,551,552,554,556,559,562,563,571,576,577,578,579,580,581,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,619,620,621,622,624,625,626,628,629,630,634,635,636,637,639,640,641,642,643,644,645,649,650,651,656,657,658,660,661,662,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,682,683,684,686,688,691,694,695,703,708,709,710,711,712,713,714,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,782,783,784,785,786,788,789,790,792,793,794,795,796,797,799,800,802,803,804,805,806,807,808,809,810,811,812,813,814,815,817,818,819,820,821,822,824,825,826,827,828,829,830,833,834,835,836,837,838,839,841,842,844,845,846,847,848,849,850,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,882,884,887,890,891,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1222,1223,1224,1225,1226,1227,1228,1229,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1257,1258,1262,1263,1265,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1303,1304],supports_inplac:1008,suppos:1304,sure:43,svd:[103,231,422,549,681,877],swap:[40,41,1008,1092],swapax:[40,41,582,715,1008,1304],symmetr:[1128,1134],syntax:[447,449,482,487,491,495,496,498],tab:1258,take:[43,1008,1060],taken:[43,877,878,1221,1223,1224,1225,1227,1229],tan:[801,1138,1142],tangent:[1138,1142,1143,1144,1152,1153,1231,1238],tanh:[801,832,1138,1231],target:[40,41,934,950,953,954,955,956,957,958,959,960,963,964,965,966,979,1158,1258],target_dict:[40,41],task:[43,1154,1155,1156,1157],team:[43,1304],templat:1258,temporari:[1008,1083,1094],tensor:[40,41,43,449,475,476,934,952,984,994,1008,1011,1013,1018,1061,1062,1065,1067,1070,1071,1072,1076,1078,1079,1086,1104,1158,1214,1215,1216,1239,1247,1249,1258,1275,1283,1285,1291,1292,1293,1294,1295,1296,1300,1301],tensorflow:[43,1128,1133,1239,1241,1243,1245,1258,1275,1277,1279,1281,1301,1304],term:[40,41,43,1239,1249,1258,1275,1285],termcolor:[40,41,42],termin:[40,41,42,1158],test:[43,862,868,869,889,890,891,984,999,1000],test_array_api:43,tf_concat:1258,than:[40,41,43,858,859,862,865,873,875,877,880,881,882,934,978,1008,1011,1020,1038,1058,1065,1087,1090,1105,1111,1158,1214,1218,1258,1301],thei:[40,41,43,1138,1143,1154,1155,1156,1214,1215,1258,1297,1298,1301],them:[1258,1304],themselv:[1202,1203],therefor:43,thi:[40,41,42,43,862,874,883,884,934,956,960,966,973,978,983,1008,1011,1040,1074,1076,1082,1105,1108,1110,1111,1112,1113,1114,1119,1128,1131,1158,1202,1206,1211,1221,1223,1224,1225,1226,1227,1228,1229,1239,1248,1258,1287,1288,1291,1292,1293,1294,1295,1296,1300,1301,1304],thing:[43,1258],those:[40,41,43,877,879,1008,1020,1105,1119,1158],though:43,thought:43,threshold:[1008,1065,1067],through:[40,41,43],tick:43,tickbox:43,tile:[301,582,715,1008],time:[43,1008,1093,1105,1108,1112,1154,1155,1156,1157,1158,1214,1215,1239,1249,1275,1286,1287,1288,1304],timeout:[40,41,42,934,943,944,1008,1074,1082,1158],timestep:[1239,1249,1275,1284],titl:[43,1258],tmp_dir:1008,tmp_dr:[1008,1083],to_appli:[40,41],to_clon:[934,1158],to_dev:[40,41,128,295,447,575,707,934],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[934,1158],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1258],to_ivy_modul:[198,840,1258,1264],to_json:[40,41],to_kv_fn:[1239,1250],to_kv_v:[1239,1250],to_list:[40,41,449,715,1008],to_multi_dev:[40,41],to_mut:[1202,1204,1211],to_n:[15,40,41,1258],to_nod:1158,to_numpi:[40,41,449,715,1008,1258,1300],to_out_fn:[1239,1250],to_out_v:[1239,1250],to_q_fn:[1239,1250],to_q_v:[1239,1250],to_raw:[40,41],to_scalar:[449,715,1008],todo:[1158,1258,1259],togeth:[40,41,1297,1298],tool:[1258,1301],top_mod:[1287,1288],topic:1304,torch:[43,932,933,1258,1300,1301,1304],torch_concat:1258,torchfcmodel:1300,total:[40,41,42,934,980,1158],total_mem_on_dev:934,total_mem_on_nod:1158,tpu:[934,981,1158],tpu_is_avail:[447,575,707,934,1158],tpye:[984,995],trace:[40,41,1008,1058],track:[43,934,1158,1202,1211,1287,1288],track_submod_call_ord:[1287,1288],track_submod_ret:[1287,1288],trail:[1289,1290],train:[1105,1107,1108,1112,1258,1259],trainabl:[1105,1111,1258,1259,1264,1265,1287,1288,1297],trainer:1258,tran:1304,transform:[1239,1247,1248],transpos:[40,41,135,301,449,715,934,965,1008,1158,1239,1241,1243,1245,1275,1277,1279,1281],travers:[15,18,19,40,41,1202,1211],treat:[40,41,932,933],tri:[40,41],triangular:[854,856],trigonometr:[1138,1139,1142,1150],tril:[77,212,396,523,655,854],trim_kei:[40,41],trust:[1105,1112,1291,1293],truth:[862,870,871,893,911,912,1008,1035,1049,1135,1136,1137],try_else_non:1008,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[934,1158],tune_dev_alloc:934,tune_dev_split:934,tune_node_alloc:1158,tune_node_split:1158,tune_step:[934,1158],tupl:[15,16,17,18,19,40,41,43,396,397,399,854,855,857,877,879,880,881,882,889,890,891,932,933,1008,1024,1040,1041,1085,1103,1158,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1216,1221,1223,1224,1225,1226,1227,1228,1229],tutori:43,two:[40,41,854,856,877,878,879,1008,1011,1015,1027,1064,1092,1128,1131],type:[15,18,40,41,42,43,59,402,403,447,448,854,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,873,874,875,877,878,880,881,882,886,887,889,890,891,893,911,912,918,934,946,947,948,949,961,962,966,978,984,988,989,990,994,995,996,997,998,999,1000,1007,1008,1009,1011,1014,1023,1025,1035,1038,1039,1041,1049,1051,1058,1070,1071,1072,1077,1091,1101,1104,1105,1111,1116,1138,1146,1158,1258,1266,1268,1269,1271,1272,1274,1287,1288,1301],types_to_iteratively_nest:[40,41,42],uint8:[1121,1123,1127],uint8_img_to_float_img:1121,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[862,864],underwai:43,unecessari:43,unfairli:43,unif:1158,unifi:[40,41,934,963,964,965,966,978,1158,1258],uniform:[40,41,1214,1215,1217,1218,1266,1268,1269,1272,1273],uniformli:[1214,1216,1218],unify_arrai:1158,unify_it:1158,unify_nest:1158,union:[15,18,19,40,41,43,396,397,399,400,402,403,854,855,856,857,858,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,879,880,881,882,883,884,886,887,889,890,891,893,911,912,918,932,933,934,952,957,958,959,960,978,979,984,988,989,990,994,995,996,997,998,999,1000,1007,1008,1009,1010,1011,1013,1014,1015,1016,1018,1020,1021,1022,1023,1024,1026,1027,1028,1029,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1047,1049,1050,1051,1052,1059,1060,1061,1062,1064,1065,1066,1067,1070,1071,1072,1075,1076,1077,1078,1079,1084,1085,1086,1087,1090,1092,1093,1095,1096,1097,1098,1100,1101,1102,1103,1104,1158,1202,1203,1204,1210,1211],uniqu:[934,943,944,1154,1155,1156,1157,1158,1202,1206],unique_kwarg:1158,unit:[43,934,1138,1139,1141,1158,1231,1232,1233,1234],unitari:[877,879],unless:[1008,1070,1072,1104],unlik:[934,1158],unnorm:[1214,1215],unpack:[1008,1100],unrol:[1239,1249],unset:1301,unset_debug_mod:44,unset_default_devic:934,unset_default_dtyp:984,unset_default_float_dtyp:984,unset_default_int_dtyp:984,unset_framework:[59,1301],unset_with_grad:1105,unstack:[40,41,135,301,449,582,715,1008],until:43,unus:[932,933],updat:[40,41,449,475,476,934,943,1008,1056,1078,1079,1105,1107,1108,1110,1112,1113,1114,1154,1155,1156,1158,1202,1207,1208,1212,1213,1239,1249,1258,1259,1264,1265,1291,1292,1293,1294,1295,1296,1301,1304],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1214,1218],upper_depth:[1287,1288],upstream:43,usabl:[1258,1304],usag:[934,978,1158],use:[40,41,42,43,498,934,943,944,969,981,1008,1075,1088,1089,1128,1133,1158,1239,1250,1256,1257,1258,1289,1290,1301,1304],used:[40,41,43,498,877,878,934,943,973,976,977,983,984,995,1008,1045,1046,1063,1072,1078,1079,1080,1081,1104,1105,1112,1113,1128,1131,1154,1155,1156,1157,1158,1202,1211,1275,1286,1291,1293,1294,1300,1301],used_dev:[934,943],used_mem_on_dev:934,used_mem_on_nod:1158,used_node_str:1158,used_node_strs_dict:1158,useful:[40,41,934,978,1158,1239,1248,1258,1301],user:[1258,1275,1286,1287,1288,1301,1304],uses:1258,using:[40,41,43,1105,1107,1108,1202,1205,1209,1221,1222,1239,1247,1251,1258,1275,1283,1300,1301,1304],util:[934,967,1158],utility_funct:[889,890,891],v_with_top_v_key_chain:[1287,1288],val:[40,41,449,466,467,468,893,928,1008,1054,1055,1056,1080,1081],valid:[889,890,891,984,989,1008,1088,1089,1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282],valid_dtyp:984,valu:[40,41,449,862,865,870,871,877,879,880,883,884,886,887,893,911,912,934,946,977,978,1008,1009,1011,1013,1020,1021,1022,1024,1025,1031,1035,1040,1041,1042,1043,1049,1059,1061,1062,1065,1067,1074,1075,1076,1077,1078,1079,1080,1081,1082,1098,1101,1102,1103,1105,1109,1112,1121,1127,1135,1136,1137,1138,1147,1148,1149,1154,1155,1156,1158,1202,1206,1207,1208,1212,1213,1214,1217,1218,1221,1223,1225,1239,1250,1251,1256,1257,1275,1286,1289,1290,1291,1293],value_is_nan:1008,vanilla:[1154,1156],var_shap:1266,variabl:[15,16,17,18,19,40,41,350,482,618,781,1008,1017,1054,1055,1056,1057,1058,1091,1105,1108,1109,1110,1111,1112,1113,1114,1116,1119,1154,1155,1156,1157,1239,1250,1256,1257,1264,1265,1266,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298],variable_data:[482,781,1105],varianc:[40,41,1221,1229,1304],varieti:1301,variou:[43,1258],vector:[40,41,491,494,877,879,880,1008,1022,1027,1128,1134,1239,1248,1275,1285],vector_norm:[40,41,103,231,422,549,681,877],vector_to_skew_symmetric_matrix:[174,359,491,627,791,1128],verbos:1303,veri:[43,1258],verifi:43,version:43,via:[1202,1203,1210,1301],view:[1121,1126],vision:1258,visual:1301,volum:[1239,1244],vw_tm1:[1105,1108,1112],wai:[1301,1304],wait:[40,41,42,43],want:[43,1258,1301,1304],warn:[59,66,67,68,69,70],warp:[487,488,1121,1122],watch:1300,websit:43,weight:[1105,1107,1108,1110,1112,1113,1114,1239,1248,1249,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1287,1288,1291,1293,1294],weight_initi:[1275,1276,1277,1278,1279,1280,1281,1282,1284,1285],weights_path:[1287,1288],well:[40,41,1008,1050],were:[40,41,1158],what:[43,1258],when:[40,41,42,43,877,879,934,1008,1019,1089,1102,1158,1258,1287,1288,1301,1304],where:[40,41,43,301,449,715,862,872,877,879,889,890,891,893,918,1008,1011,1018,1020,1024,1037,1052,1059,1070,1103,1202,1203,1210,1214,1215],wherea:43,wherebi:[1202,1211],whether:[15,18,19,40,41,42,862,869,889,890,891,932,933,934,952,965,969,973,978,981,983,984,994,998,999,1000,1007,1008,1010,1015,1016,1028,1031,1036,1040,1047,1050,1053,1057,1058,1063,1084,1091,1100,1101,1105,1108,1109,1110,1111,1112,1113,1114,1116,1154,1155,1156,1157,1158,1202,1203,1204,1206,1210,1211,1214,1215,1231,1232,1239,1247,1258,1264,1265,1275,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296],which:[40,41,42,43,498,854,855,856,857,858,859,860,877,878,880,881,882,883,884,886,887,889,890,891,932,933,934,943,944,952,957,958,959,960,963,964,965,966,968,970,974,976,977,978,984,989,994,998,1007,1008,1011,1014,1023,1025,1027,1028,1029,1031,1041,1042,1043,1044,1051,1052,1060,1061,1062,1069,1070,1071,1072,1073,1075,1078,1079,1086,1090,1100,1102,1104,1105,1108,1109,1110,1112,1113,1114,1116,1118,1119,1121,1123,1128,1131,1138,1143,1158,1202,1206,1207,1208,1212,1213,1214,1215,1216,1217,1218,1221,1223,1224,1225,1226,1227,1228,1229,1231,1236,1239,1250,1251,1258,1264,1265,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1297,1298,1300,1301],whilst:43,whitespac:[40,41,42],who:43,whose:[43,854,856,862,863,866,867,877,878,881,882,893,911,918,1008,1014,1019,1221,1222,1223,1224,1225,1227,1229],why:[1258,1259],width:[1121,1126],wiki:1304,wikipedia:1304,window:[1121,1126,1239,1240,1241,1242,1243,1244,1245,1246,1275,1276,1277,1278,1279,1280,1281,1282],wise:[40,41,43,862,864,870,871,874,893,911,912,918,1008,1020,1035,1038,1039,1049,1065,1067,1077,1105,1108,1110,1112,1114,1135,1136,1137,1138,1139,1141,1142,1143,1146,1147,1148,1149,1150,1152,1231,1232,1233,1234,1235,1236,1237,1238],wish:1301,with_bia:[1275,1285],with_cal:[1008,1031],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1105,1115],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1158,with_partial_v:[1287,1288],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,449,477,1008,1086,1158],with_to_kv_fn:[1275,1286],with_to_out_fn:[1275,1286],with_to_q_fn:[1275,1286],within:[15,18,19,43,877,879,1008,1011,1214,1218],without:[40,41,43,1008,1074,1076,1082,1202,1204,1301],wonder:1258,word:[15,16,17,1008,1011,1214,1218,1264,1265],work:[43,1300],worker:[934,943,944,1158],worker_class:[934,943,944,1158],worker_kwarg:1158,would:[43,1231,1236,1258,1301,1304],wrap:[15,40,41,42,43,447,449,482,487,491,495,496,498,1008,1019,1105,1119,1258],wrapper:43,write:[40,41,43,1258,1259,1304],written:[43,1258,1304],ws_new:[1105,1108,1110,1112,1113,1114],x1_i:[862,864,870,871,1008,1035,1049,1138,1146],x2_i:[862,864,870,871,1008,1035,1049,1138,1146],x_feat_dim:[1239,1250],x_i:[862,863,865,866,867,868,869,873,874,875],x_in:[1258,1300],x_inv:[1128,1130],x_max:[449,1008,1020],x_min:[449,1008,1020],x_sub:1158,xkk:1304,xkkm1:1304,xkm1km1:1304,xs0:1158,xs_t:1158,year:[1258,1304],yet:[1202,1211,1304],yield:[1008,1102],you:[43,1258,1300,1301,1304],your:[1258,1259,1300,1301,1304],your_awesome_project:1301,yourself:[43,1258],yourslef:43,youtub:43,zero:[40,41,77,212,396,523,655,854,856,862,874,877,880,889,890,891,1008,1024,1070,1072,1078,1079,1103,1104,1105,1107,1108,1112,1113,1239,1247,1258,1266,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1291,1292,1293,1294],zero_pad:[301,449,582,715,1008],zeros_lik:[135,301,449,582,715,1008],zip:1158,zk_e:1304},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","greater_equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","greater_equal","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","greater_equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","greater_equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","greater_equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","greater_equal","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1031,"function":[77,81,86,102,107,109,111,112,114,115,212,216,221,230,235,237,239,240,242,243,396,400,405,421,426,428,430,431,433,434,523,527,532,548,553,555,557,558,560,561,655,659,664,680,685,687,689,690,692,693,854,858,862,876,881,883,885,886,888,889],Ones:1271,Using:1301,abs:[302,583,716,1009],aco:[802,1139],acosh:[803,1140],activ:[196,383,509,647,832,1231,1261],adam:1292,adam_step:1107,adam_upd:1108,algebra:[103,174,231,359,422,491,549,627,681,791,877],all:[116,244,435,562,694,890],all_equ:1010,all_nested_indic:1203,ani:[117,245,436,563,695,891],api:[0,43,75,119,210,247,394,438,521,565,653,697,852],arang:[136,303,450,584,717,1011],arg_nam:1012,argmax:[110,238,429,556,688,884],argmin:[137,451,585,718,1013],args_to_ivi:16,args_to_n:17,argsort:[113,241,432,559,691,887],arithmet:[1,120,248,439,566,698],arrai:[0,3,43,75,118,119,121,138,210,246,247,249,256,304,394,437,438,440,452,521,564,565,567,586,653,696,697,699,719,852,893,1014],array_equ:[305,720,1015],arrays_equ:1016,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[804,1141],asinh:[87,406,533,665,863],assert_supports_inplac:1017,atan2:[806,1143],atan:[805,1142],atanh:[807,1144],attribut:[5,122,250,441,568,700],backend:[43,73],bilinear_resampl:[171,356,488,624,788,1122],binary_cross_entropi:1253,bitwis:[7,123,251,442,569,701],bitwise_and:[88,222,407,534,666,864],broadcast_to:[306,721,1018],builder:51,builtin:[118,246,256,437,564,696,893],builtin_ab:[257,894],builtin_add:[258,895],builtin_and:[259,896],builtin_bool:[260,897],builtin_contain:[261,898],builtin_deepcopi:[262,899],builtin_dir:[263,900],builtin_eq:[264,901],builtin_float:[265,902],builtin_floordiv:[266,903],builtin_g:[267,904],builtin_getattr:[268,905],builtin_getattribut:[269,906],builtin_getitem:[270,907],builtin_gt:[271,908],builtin_int:[272,909],builtin_invert:[273,910],builtin_l:[274,911],builtin_lt:[275,571,703,912],builtin_mul:[276,913],builtin_n:[277,914],builtin_neg:[278,915],builtin_or:[279,916],builtin_po:[280,917],builtin_pow:[281,918],builtin_radd:[282,919],builtin_rand:[283,920],builtin_rfloordiv:[284,921],builtin_rmul:[285,922],builtin_ror:[286,923],builtin_rpow:[287,924],builtin_rsub:[288,925],builtin_rtruediv:[289,926],builtin_rxor:[290,927],builtin_setitem:[291,928],builtin_sub:[292,929],builtin_truediv:[293,930],builtin_xor:[294,931],cache_fn:1019,cast:[139,307,453,587,722,988],ceil:[89,223,408,535,667,865],choleski:[792,1129],choose_random_framework:61,citat:1258,clear_framework_stack:62,clear_mem_on_dev:[709,950],clip:[308,723,1020],clip_matrix_norm:1021,clip_vector_norm:1022,clone:1173,clone_arrai:1174,clone_it:1175,clone_nest:1176,clonedit:1160,cloneditem:1159,clonednest:1161,closest_valid_dtyp:989,code:1304,comparison:[9,124,252,443,570,702],compil:[309,454,724,932,933],concaten:[140,310,455,588,725,1023],constant:[76,211,395,522,654,853],constant_pad:[311,589,726,1024],contain:[40,41],container_typ:[727,1025],content:1258,contribut:43,conv1d:[202,386,513,844,1240,1276],conv1d_transpos:[203,387,514,845,1241],conv1dtranspos:1277,conv2d:[204,388,515,649,846,1242,1278],conv2d_transpos:[205,389,516,847,1243],conv2dtranspos:1279,conv3d:[206,390,517,650,848,1244,1280],conv3d_transpos:[207,391,518,849,1245],conv3dtranspos:1281,convers:15,convert:[198,840,1264],convert_dtyp:990,copy_arrai:[728,1026],copy_nest:1204,core:[127,255,446,574,706,892],cos:[90,409,536,668,866],cosh:[91,410,537,669,808,867,1145],cprint:1303,creat:43,creation:[77,212,396,523,655,854],cross:[312,729,1027],cross_entropi:1254,cumprod:[141,313,456,730,1028],cumsum:[731,1029],current_framework:63,current_framework_str:[732,1030],data:[81,85,216,220,400,404,527,531,659,663,858,861],debug_mod:45,debugg:44,default_devic:951,default_dtyp:991,default_float_dtyp:992,default_int_dtyp:993,default_nod:1177,depthwise_conv2d:[208,392,519,651,850,1246],depthwiseconv2d:1282,design:43,dev:[130,297,577,710,952],dev_clon:953,dev_clone_arrai:954,dev_clone_it:955,dev_clone_nest:956,dev_dist:957,dev_dist_arrai:958,dev_dist_it:959,dev_dist_nest:960,dev_from_str:[131,298,578,711,961],dev_to_str:[132,299,579,712,962],dev_unifi:963,dev_unify_arrai:964,dev_unify_it:965,dev_unify_nest:966,dev_util:967,devclonedit:937,devcloneditem:936,devclonednest:938,devdistit:940,devdistitem:939,devdistnest:941,devic:[20,128,295,447,575,707,934],devmapp:943,devmappermultiproc:944,diagon:[104,232,423,550,682,878],distribute_nest:1178,divid:1146,document:1258,dropout:[1247,1283],dtype:[142,314,457,590,733,984,994],dtype_bit:[143,315,458,591,734,995],dtype_from_str:[144,316,459,592,735,996],dtype_to_str:[145,317,460,593,736,997],ecosystem:52,einops_rearrang:1032,einops_reduc:1033,einops_repeat:1034,einsum:[188,374,501,639,824,1222],elementwis:[86,221,405,532,664,862],equal:[92,411,538,670,737,1035],erf:[497,809,1147],execute_with_gradi:[168,351,483,619,782,1109],exist:1036,exp:[810,1148],expand_dim:[318,738,1037],finfo:[83,218,402,529,661,859],firstlayersiren:1268,flip:[108,236,427,554,686,882],float_img_to_uint8_img:1123,floor:[319,739,1038],floormod:[320,740,1039],fomaml_step:1155,fork:43,fourier_encod:1040,framework:59,full:[146,321,461,594,741,1041],func:72,gather:[147,322,462,595,742,1042],gather_nd:[148,323,463,596,743,1043],geglu:1262,gelu:[384,510,833,1232,1263],gener:[22,135,301,449,582,715,1008],get_all_arrays_in_memori:1044,get_all_arrays_on_dev:968,get_framework:64,get_min_bas:1045,get_min_denomin:1046,get_num_dim:[744,1047],get_referrers_recurs:1048,glorotuniform:1269,gpu_is_avail:[969,1179],gradient:[24,167,350,482,618,781,1105],gradient_descent_upd:1110,gradient_imag:[172,357,489,625,789,1124],greater_equ:[93,224,412,539,671,1049],gym:53,handler:59,has_nan:1050,ident:[149,324,464,597,745,1051],iinfo:[84,219,403,530,662,860],imag:[26,170,355,487,623,787,1121],index_nest:1205,indices_wher:[150,325,465,746,1052],initi:1266,inplac:[11,125,253,444,572,704],inplace_arrays_support:1053,inplace_decr:[151,326,466,598,747,1054],inplace_incr:[152,327,467,599,748,1055],inplace_upd:[153,328,468,600,749,1056],inplace_variables_support:1057,inv:[793,1130],invalid_dtyp:998,is_arrai:[154,329,469,601,750,1058],is_float_dtyp:999,is_int_dtyp:1000,is_vari:[169,352,484,620,783,1111],isfinit:[94,225,413,540,672,868],isinf:[330,602,751,1059],isnan:[95,226,414,541,673,869],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,851,1300,1301,1304],ivymodul:[199,841],jax:74,keep:43,lamb:1293,lamb_upd:1112,lar:1294,lars_upd:1113,layer:[201,385,512,648,843,1239,1275],layer_norm:1257,layernorm:1290,leaky_relu:[834,1233],less:[96,227,415,542,674,870],less_equ:[97,416,543,675,871],linalg:[28,1128],linear:[103,174,231,359,422,491,549,627,681,791,877,1248,1285],linear_resampl:[155,331,470,603,752,1060],linspac:[156,332,471,604,753,1061],list:43,log1p:[98,417,544,676,872],log2:[99,418,545,677,873],log:[811,1149],logic:[30,178,364,495,631,798,1135],logical_and:[365,799,1136],logical_not:[100,228,419,546,678,874],logical_or:[366,800,1137],logspac:[157,333,472,605,754,1062],loss:1252,lstm:1284,lstm_updat:1249,maml_step:1156,manipul:[107,235,426,553,685,881],map:1206,map_nest_at_index:1207,map_nest_at_indic:1208,match_kwarg:1063,math:[32,179,367,496,632,801,1138],matmul:[334,606,755,1064],matrix_norm:[175,360,492,628,794,1131],maximum:[756,1065],mech:54,memori:55,meshgrid:[335,757,1066],meta:[34,1154],method:[102,230,421,548,680,876],minimum:[758,1067],model:56,modul:[1287,1288,1300],multi:1158,multi_head_attent:1250,multi_index_nest:1209,multidevcontain:42,multidevit:947,multidevitem:946,multidevnest:948,multiheadattent:1286,multinodeit:1164,multinodeitem:1163,multinodenest:1165,multinomi:[181,369,499,634,817,1215],multiprocess:[759,1068],mxnet:209,nativ:1300,nest:1202,nested_indices_wher:1210,nested_map:1211,network:1300,next:1258,node:[1158,1180],node_dist:1181,node_dist_arrai:1182,node_dist_it:1183,node_str:1184,node_to_str:1185,node_util:1186,nodedistit:1167,nodedistitem:1166,nodedistnest:1168,nodemapp:1170,nodemappermultiproc:1171,norm:[1256,1289],num_arrays_in_memori:1069,num_arrays_on_dev:970,num_cpu_cor:971,num_gpu:[133,972,1187],numpi:393,nutshel:1258,one_hot:[158,473,607,760,1070],ones:[78,213,397,524,656,855,1071],ones_lik:[159,336,474,608,761,1072],oper:[1,3,7,9,11,13,43,120,121,123,124,125,126,248,249,251,252,253,254,439,440,442,443,444,445,566,567,569,570,572,573,698,699,701,702,704,705],optim:[1291,1295],optimizer_upd:1114,overview:1258,percent_used_mem_on_dev:973,percent_used_mem_on_nod:1188,pinv:[361,795,1132],portabl:1304,print_all_arrays_in_memori:1073,print_all_arrays_on_dev:974,profil:[129,296,448,576,708,949,1172],pull:43,queue_timeout:1074,randint:[182,370,635,818,1216],random:[36,180,368,498,633,816,1214],random_crop:1125,random_norm:[183,371,636,819,1217],random_uniform:[184,372,637,820,1218],reduce_max:[189,375,502,640,825,1223],reduce_mean:[190,376,503,641,826,1224],reduce_min:[191,377,504,642,827,1225],reduce_prod:[192,378,505,643,828,1226],reduce_std:[379,1227],reduce_sum:[193,380,506,644,829,1228],reduce_var:[194,381,507,645,830,1229],reduct:[38,187,373,500,638,823,1221],reflect:[13,126,254,445,573,705],relu:[835,1234],repeat:[337,762,1075],reptile_step:1157,request:43,reshap:[763,1076],robot:57,round:[338,764,1077],run:1301,scaled_dot_product_attent:1251,scatter_flat:[160,339,475,609,765,1078],scatter_nd:[161,340,476,610,766,1079],search:[109,237,428,555,687,883],seed:[185,821,1219],sequenti:[1297,1298],set:[111,239,430,557,689,885],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:975,set_default_dtyp:1001,set_default_float_dtyp:1002,set_default_int_dtyp:1003,set_default_nod:1189,set_exception_debug_mod:48,set_framework:65,set_min_bas:1080,set_min_denomin:1081,set_nest_at_index:1212,set_nest_at_indic:1213,set_queue_timeout:1082,set_split_factor:[976,1190],set_tmp_dir:1083,set_with_grad:1115,sgd:1296,shape:[767,1084],shape_to_tupl:1085,shuffl:[186,822,1220],sigmoid:[836,1235],signatur:[102,230,421,548,680,876],sin:[812,1150],sinh:[813,1151],siren:1272,softmax:[197,511,837,1236],softplu:[838,1237],sort:[112,240,431,558,690,886],sparse_cross_entropi:1255,split:[162,341,477,611,768,1086],split_factor:[977,1191],split_func_cal:[978,1192],sqrt:[101,229,420,547,679,875],squeez:[163,342,478,612,769,1087],stable_divid:1088,stable_pow:1089,stack:[343,770,1090],stack_imag:[173,358,490,626,790,1126],standard:43,statist:[114,242,433,560,692,888],stop_gradi:[353,485,621,784,1116],str_to_nod:1193,submodul:43,supports_inplac:1091,svd:[105,233,424,551,683,879],swapax:[613,771,1092],tan:[814,1152],tanh:[815,839,1153,1238],tensorflow:520,tile:[344,614,772,1093],tmp_dir:1094,to_dev:[134,300,580,713,979],to_ivi:18,to_ivy_modul:[200,842,1265],to_list:[773,1095],to_n:19,to_nod:1194,to_numpi:[774,1096],to_scalar:[775,1097],todo:43,torch:652,total_mem_on_dev:980,total_mem_on_nod:1195,tpu_is_avail:[581,714,981,1196],train:1300,trainabl:1300,transpos:[164,345,479,776,1098],tree:1258,tril:[79,214,398,525,657,856],try_else_non:1099,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,216,220,400,404,527,531,659,663,858,861],uint8_img_to_float_img:1127,unifi:1197,unify_arrai:1198,unify_it:1199,unify_nest:1200,unset_debug_mod:49,unset_default_devic:982,unset_default_dtyp:1004,unset_default_float_dtyp:1005,unset_default_int_dtyp:1006,unset_framework:71,unset_with_grad:1117,unstack:[165,346,480,615,777,1100],updat:43,used_mem_on_dev:983,used_mem_on_nod:1201,util:[115,243,434,561,693,889],valid_dtyp:1007,value_is_nan:1101,variabl:[354,486,622,785,1118],variable_data:[786,1119],vector_norm:[106,234,425,552,684,880],vector_to_skew_symmetric_matrix:[177,363,494,630,797,1134],verbos:1302,vision:58,where:[347,778,1102,1258],why:1304,with_grad:1120,wrapper:72,write:1301,your:43,zero:[80,215,399,526,658,857,1274],zero_pad:[348,616,779,1103],zeros_lik:[166,349,481,617,780,1104]}})